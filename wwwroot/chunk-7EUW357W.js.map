{
  "version": 3,
  "sources": ["src/app/services/dashboard.service.ts", "src/app/admin/components/dashboard/dashboard.component.ts", "src/app/admin/components/dashboard/dashboard.component.html", "src/app/admin/components/project-details/project-details.component.ts", "src/app/admin/components/project-details/project-details.component.html", "src/app/services/client-location.service.ts", "src/app/admin/components/project/project.component.ts", "src/app/admin/components/project/project.component.html", "src/app/admin/components/check-box-printer/check-box-printer.component.ts", "src/app/admin/components/check-box-printer/check-box-printer.component.html", "src/app/admin/components/projects/projects.component.ts", "src/app/admin/components/projects/projects.component.html", "src/app/models/country.model.ts", "src/app/admin/components/countries/countries.component.ts", "src/app/admin/components/countries/countries.component.html", "src/app/admin/components/client-locations/client-locations.component.ts", "src/app/admin/components/client-locations/client-locations.component.html", "src/app/models/task-priority.model.ts", "src/app/admin/components/task-priorities/task-priorities.component.ts", "src/app/admin/components/task-priorities/task-priorities.component.html", "src/app/admin/components/task-status/task-status.component.ts", "src/app/admin/components/task-status/task-status.component.html", "src/app/admin/components/masters/masters.component.ts", "src/app/admin/components/masters/masters.component.html", "src/app/admin/admin-routing/admin-routing.module.ts", "src/app/admin/admin.module.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DashboardService {\r\n  //constructor() {}\r\n  getTeamMembersSummary(): any[] {\r\n    let TeamMembersSummary = [\r\n      {\r\n        Region: 'East',\r\n        TeamMembersCount: 20,\r\n        TemporarilyUnavailableMembers: 4,\r\n      },\r\n      {\r\n        Region: 'West',\r\n        TeamMembersCount: 15,\r\n        TemporarilyUnavailableMembers: 8,\r\n      },\r\n      {\r\n        Region: 'South',\r\n        TeamMembersCount: 17,\r\n        TemporarilyUnavailableMembers: 1,\r\n      },\r\n      {\r\n        Region: 'North',\r\n        TeamMembersCount: 19,\r\n        TemporarilyUnavailableMembers: 6,\r\n      },\r\n    ];\r\n    return TeamMembersSummary;\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../../services/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrl: './dashboard.component.scss',\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  Designation: string = '';\r\n  Username: string = '';\r\n  NoOfTeamMembers: number = 0;\r\n  TotalCostOfAllProjects: number = 0;\r\n  PendingTasks: number = 0;\r\n  UpComingProjects: number = 0;\r\n  ProjectCost: number = 0;\r\n  CurrentExpenditure: number = 0;\r\n  AvailableFunds: number = 0;\r\n  Clients: string[] = [];\r\n  Projects: string[] = [];\r\n  Years: number[] = [];\r\n  TeamMembersSummary: any = [];\r\n  TeamMembers: any = [];\r\n  ToDate: Date = new Date();\r\n\r\n  constructor(private dashboardService: DashboardService) {}\r\n\r\n  ngOnInit(): void {\r\n    //We can also call REST API calls inside the ngOnInit()\r\n    this.Designation = 'Team Leader';\r\n    this.Username = 'John Smith';\r\n    this.NoOfTeamMembers = 67;\r\n    this.TotalCostOfAllProjects = 240;\r\n    this.PendingTasks = 15;\r\n    this.UpComingProjects = 0.2;\r\n    this.ProjectCost = 2113507;\r\n    this.CurrentExpenditure = 96788;\r\n    this.AvailableFunds = 52536;\r\n    this.ToDate = new Date();\r\n\r\n    this.Clients = [\r\n      'ABC Infotech Ltd.',\r\n      'DEF Software Solutions',\r\n      'GHI Industries',\r\n    ];\r\n\r\n    this.Projects = ['Project A', 'Project B', 'Project C', 'Project D'];\r\n    for (let i = 2023; i >= 2017; i--) {\r\n      this.Years.push(i);\r\n    }\r\n\r\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummary();\r\n\r\n    this.TeamMembers = [\r\n      {\r\n        Region: 'East',\r\n        Members: [\r\n          { ID: 1, Name: 'Ford', Status: 'Available' },\r\n          { ID: 2, Name: 'Miller', Status: 'Available' },\r\n          { ID: 3, Name: 'Jones', Status: 'Busy' },\r\n          { ID: 4, Name: 'James', Status: 'Busy' },\r\n        ],\r\n      },\r\n      {\r\n        Region: 'West',\r\n        Members: [\r\n          { ID: 5, Name: 'Anna', Status: 'Available' },\r\n          { ID: 6, Name: 'Arun', Status: 'Available' },\r\n          { ID: 7, Name: 'Varun', Status: 'Busy' },\r\n          { ID: 8, Name: 'Jasmine', Status: 'Busy' },\r\n        ],\r\n      },\r\n      {\r\n        Region: 'South',\r\n        Members: [\r\n          { ID: 9, Name: 'Krishna', Status: 'Available' },\r\n          { ID: 10, Name: 'Mohan', Status: 'Available' },\r\n          { ID: 11, Name: 'Raju', Status: 'Busy' },\r\n          { ID: 12, Name: 'Farooq', Status: 'Busy' },\r\n        ],\r\n      },\r\n      {\r\n        Region: 'North',\r\n        Members: [\r\n          { ID: 13, Name: 'Jacob', Status: 'Available' },\r\n          { ID: 14, Name: 'Smith', Status: 'Available' },\r\n          { ID: 15, Name: 'Jones', Status: 'Busy' },\r\n          { ID: 16, Name: 'James', Status: 'Busy' },\r\n        ],\r\n      },\r\n    ];\r\n  }\r\n  onProjectChange($event: any) {\r\n    if ($event.target.innerHTML == 'Project A') {\r\n      this.ProjectCost = 2113507;\r\n      this.CurrentExpenditure = 96789;\r\n      this.AvailableFunds = 52436;\r\n    } else if ($event.target.innerHTML == 'Project B') {\r\n      this.ProjectCost = 1113507;\r\n      this.CurrentExpenditure = 76789;\r\n      this.AvailableFunds = 92436;\r\n    } else if ($event.target.innerHTML == 'Project C') {\r\n      this.ProjectCost = 7113507;\r\n      this.CurrentExpenditure = 86789;\r\n      this.AvailableFunds = 32436;\r\n    } else if ($event.target.innerHTML == 'Project D') {\r\n      this.ProjectCost = 3113507;\r\n      this.CurrentExpenditure = 56789;\r\n      this.AvailableFunds = 92436;\r\n    }\r\n  }\r\n}\r\n", "<nav>\n  <ol class=\"breadcrumb bg-light\">\n    <li class=\"breadcrumb-item\">\n      <a routerLink=\"/\">Home</a>\n    </li>\n    <li class=\"breadcrumb-item active\">Dashboard</li>\n  </ol>\n</nav>\n\n<h5>Dashboard</h5>\n\n<div class=\"row\">\n  <!-- (3+6+3)=12 columns -->\n  <div class=\"col-lg-3 pb-3\" style=\"background-color: #e9e6e6\">\n    <div class=\"row\">\n      <div\n        class=\"col-11 text-white text-center mx-2 rounded pt-2 pb-2 font-weight-bold\"\n        style=\"\n          background-color: #a39e9e;\n          font-family: Arial, Helvetica, sans-serif;\n        \"\n      >\n        {{ Designation | uppercase }}\n      </div>\n      <div class=\"col-12 text-center mt-2\">\n        <img src=\"assets/user.png\" alt=\"UserImage\" width=\"120px\" />\n      </div>\n      <div\n        class=\"col-12 text-center pt-2 pb-2 font-weight-bold\"\n        style=\"font-family: ' Tahoma,Segoe UI', Geneva, Verdana, sans-serif\"\n      >\n        {{ Username }}\n      </div>\n      <div\n        class=\"col-12 text-center pt-2 pb-2\"\n        style=\"font-family: Arial, Helvetica, sans-serif\"\n      >\n        TEAM SUMMARY\n      </div>\n      <div class=\"col-12 mb-3\">\n        <ul class=\"list-group\">\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            NO. OF TEAM MEMBERS\n            <span class=\"badge bg-secondary\" style=\"font-size: 13px\">{{\n              NoOfTeamMembers\n            }}</span>\n          </li>\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            TOTAL COST OF ALL PROJECTS\n            <span class=\"badge bg-secondary\" style=\"font-size: 13px\"\n              >$ {{ TotalCostOfAllProjects }}K</span\n            >\n          </li>\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            PENDING TASKS\n            <span class=\"badge bg-secondary\" style=\"font-size: 13px\">{{\n              PendingTasks\n            }}</span>\n          </li>\n          <li\n            class=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            UPCOMING PROJECTS\n            <span class=\"badge bg-secondary\" style=\"font-size: 13px\">{{\n              UpComingProjects | percent\n            }}</span>\n          </li>\n        </ul>\n      </div>\n      <div\n        class=\"col-12 text-center pt-2 pb-2\"\n        style=\"font-family: Tahoma, 'Segoe UI', Geneva, Verdana, sans-serif\"\n      >\n        CLIENTS\n      </div>\n      <div class=\"col-12\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item\" *ngFor=\"let client of Clients\">\n            {{ client }}\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-6\">\n    <div class=\"row\">\n      <div class=\"col-12 py-2\" style=\"background-color: #e9e6e6\">\n        <div class=\"row mt-2\">\n          <div class=\"col-6 text-start\">\n            <div class=\"dropdown\">\n              <button\n                class=\"btn btn-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-bs-toggle=\"dropdown\"\n              >\n                Project A\n              </button>\n              <div class=\"dropdown-menu\">\n                <a\n                  href=\"#\"\n                  class=\"dropdown-item\"\n                  *ngFor=\"let project of Projects\"\n                  onclick=\"return false\"\n                  (click)=\"onProjectChange($event)\"\n                  >{{ project }}</a\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6 text-end\">\n            <div class=\"dropdown\">\n              <button\n                class=\"btn btn-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-bs-toggle=\"dropdown\"\n              >\n                2023\n              </button>\n              <div class=\"dropdown-menu\">\n                <a\n                  href=\"#\"\n                  class=\"dropdown-item\"\n                  *ngFor=\"let year of Years\"\n                  onclick=\"return false\"\n                >\n                  <span [ngSwitch]=\"year\">\n                    <span *ngSwitchCase=\"2023\" style=\"color: green\">{{\n                      year\n                    }}</span>\n                    <span *ngSwitchCase=\"2022\" style=\"color: blue\">{{\n                      year\n                    }}</span>\n                    <span *ngSwitchDefault=\"\" style=\"color: black\">{{\n                      year\n                    }}</span>\n                  </span>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"col-11 mx-auto mt-1 text-center text-white pt-2 pb-2 mx-auto rounded font-weight-bold\"\n        style=\"\n          background-color: #718d97;\n          font-family: Arial, Helvetica, sans-serif;\n        \"\n      >\n        PROJECT BRIEFING\n      </div>\n      <div class=\"col-12\">\n        <table class=\"table table-borderless\">\n          <tr>\n            <td>Project Cost</td>\n            <td>{{ ProjectCost | currency : \"INR\" }}</td>\n          </tr>\n          <tr>\n            <td>Current Expenditure</td>\n            <td>{{ CurrentExpenditure | currency : \"INR\" }}</td>\n          </tr>\n          <tr>\n            <td>Available Funds</td>\n            <td>{{ AvailableFunds | currency : \"INR\" }}</td>\n          </tr>\n        </table>\n      </div>\n      <div\n        class=\"col-11 mx-auto mt-1 text-center text-white pt-2 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"\n          background-color: #718d97;\n          font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial,\n            sans-serif;\n        \"\n      >\n        TEAM MEMBERS SUMMARY\n      </div>\n      <div class=\"col-12\">\n        <table class=\"table\">\n          <tr>\n            <th class=\"pb-2\">Region</th>\n            <th class=\"pb-2\">Team Members Count</th>\n            <th class=\"pb-2\">Temporarily Unavailable Members</th>\n          </tr>\n          <tr *ngFor=\"let team of TeamMembersSummary\">\n            <td>\n              <b>{{ team.Region }}</b>\n            </td>\n            <td>{{ team.TeamMembersCount }}</td>\n            <td>{{ team.TemporarilyUnavailableMembers }}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-lg-3\" style=\"background-color: #e9e6e6\">\n    <div class=\"row\">\n      <div\n        class=\"col-11 mx-auto mt-1 text-center text-white pt-1 pb-2 mx-2 rounded font-weight-bold\"\n        style=\"\n          background-color: #718d97;\n          font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial,\n            sans-serif;\n        \"\n      >\n        TEAM MEMBERS\n      </div>\n      <div class=\"col-lg-12 pt-2\">\n        <div class=\"accordion\" id=\"accordionExample\">\n          <div\n            class=\"card\"\n            *ngFor=\"let teamgroup of TeamMembers; let i = index\"\n          >\n            <div class=\"card-header bg-secondary\" id=\"card1\">\n              <h2 class=\"mb-0\">\n                <button\n                  class=\"btn btn-link text-white\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  [attr.data-bs-target]=\"'#cardbody' + i\"\n                  [attr.aria-expanded]=\"false\"\n                  [attr.aria-controls]=\"'cardbody' + i\"\n                  style=\"text-decoration: none\"\n                >\n                  {{ teamgroup.Region }}\n                </button>\n              </h2>\n            </div>\n            <div\n              class=\"collapse\"\n              [id]=\"'cardbody' + i\"\n              data-bs-parent=\"#accordionExample\"\n              [ngClass]=\"i == 0 ? 'show' : ''\"\n            >\n              <div class=\"card-body\">\n                <div\n                  *ngIf=\"i == 0; then firstTemplate; else secondTemplate\"\n                ></div>\n\n                <ng-template #firstTemplate>\n                  <div class=\"card\" *ngFor=\"let member of teamgroup.Members\">\n                    <div class=\"card-header bg-primary text-white\">\n                      #{{ member.ID }} {{ member.Name }}\n                    </div>\n                    <div class=\"card-body\">{{ member.Status }}</div>\n                  </div>\n                </ng-template>\n\n                <ng-template #secondTemplate>\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let member of teamgroup.Members\">\n                        <td>{{ member.ID }}</td>\n                        <td\n                          [style.color]=\"\n                            member.Status == 'Busy' ? 'red' : 'black'\n                          \"\n                        >\n                          {{ member.Name }}\n                        </td>\n                        <td><i class=\"fa fa-phone\"></i> {{ member.Status }}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", "import { Component, OnInit } from '@angular/core';\r\nimport { Project } from '../../../models/project.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-project-details',\r\n  templateUrl: './project-details.component.html',\r\n  styleUrl: './project-details.component.scss',\r\n})\r\nexport class ProjectDetailsComponent implements OnInit {\r\n  project: Project = new Project();\r\n  routeParamsSubscription!: Subscription;\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private projectsService: ProjectsService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.routeParamsSubscription = this.activatedRoute.params.subscribe(\r\n      (params) => {\r\n        let pid = params['projectid'];\r\n        this.projectsService.getProjectByProjectID(pid).subscribe({\r\n          next: (proj: Project) => {\r\n            this.project = proj;\r\n          },\r\n        });\r\n      }\r\n    );\r\n  }\r\n  ngOnDestroy() {\r\n    this.routeParamsSubscription.unsubscribe();\r\n  }\r\n}\r\n", "<div class=\"row\">\n  <div class=\"col-md-8 col-lg-6 col-xl-5 mx-auto\">\n    <div class=\"card card-primary\">\n      <div class=\"card-header\">\n        <div>#{{ project.projectID }}</div>\n        <h5>{{ project.projectName }}</h5>\n      </div>\n      <div class=\"card-body\">\n        <table class=\"table table-borderless table-sm\">\n          <tr>\n            <th>Date of Start</th>\n            <td>{{ project.dateOfStart }}</td>\n          </tr>\n          <tr>\n            <th>Team Size</th>\n            <td>{{ project.teamSize }}</td>\n            <!-- <td>{{ project.teamSize | numberToWords }}</td> -->\n          </tr>\n          <tr>\n            <th>Client Location</th>\n            <td>{{ project.clientLocation?.clientLocationName }}</td>\n          </tr>\n          <tr>\n            <th>Status</th>\n            <td>{{ project.status }}</td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"card-footer\">\n        <a [routerLink]=\"['/admin', 'projects']\" class=\"btn btn-info\">Back</a>\n      </div>\n    </div>\n  </div>\n</div>\n", "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientLocation } from '../models/client-location.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ClientLocationService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getClientLocations(): Observable<ClientLocation[]> {\r\n    return this.httpClient.get<ClientLocation[]>('api/clientlocations', {\r\n      responseType: 'json',\r\n    });\r\n  }\r\n  getClientLocationtByClientLocationID(\r\n    ClientLocationID: number\r\n  ): Observable<ClientLocation> {\r\n    return this.httpClient.get<ClientLocation>(\r\n      '/api/clientlocations/searchbyclientlocationid/' + ClientLocationID,\r\n      { responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  insertClientLocation(\r\n    newClientLocation: ClientLocation\r\n  ): Observable<ClientLocation> {\r\n    return this.httpClient.post<ClientLocation>(\r\n      '/api/clientlocations',\r\n      newClientLocation,\r\n      { responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  updateClientLocation(\r\n    existingClientLocation: ClientLocation\r\n  ): Observable<ClientLocation> {\r\n    return this.httpClient.put<ClientLocation>(\r\n      '/api/clientlocations',\r\n      existingClientLocation,\r\n      { responseType: 'json' }\r\n    );\r\n  }\r\n\r\n  deleteClientLocation(ClientLocationID: number): Observable<string> {\r\n    return this.httpClient.delete<string>(\r\n      '/api/clientlocations?ClientLocationID=' + ClientLocationID\r\n    );\r\n  }\r\n}\r\n", "import {\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Project } from '../../../models/project.model';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { CheckBoxPrinterComponent } from '../check-box-printer/check-box-printer.component';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrl: './project.component.scss',\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n  @Input('currentProject') project!: Project;\r\n  @Input('recordIndex') i!: number;\r\n\r\n  @Output() editClick = new EventEmitter();\r\n  @Output() deleteClick = new EventEmitter();\r\n\r\n  MySubscription!: Subscription;\r\n\r\n  hideDetails: boolean = false;\r\n\r\n  constructor(public projectsService: ProjectsService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // console.log('----ngOnChanges called');\r\n    // for (let propName in changes) {\r\n    //   let chng = changes[propName];\r\n    //   let cur = JSON.stringify(chng.currentValue);\r\n    //   let prev = JSON.stringify(chng.previousValue);\r\n    //   console.log(`${propName}:currentValue= ${cur}, previousValue=${prev}`);\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.MySubscription = this.projectsService.MySubject.subscribe((hide) => {\r\n      this.hideDetails = hide;\r\n    });\r\n  }\r\n\r\n  onEditClick(event: any, i: number) {\r\n    this.editClick.emit({ event, i });\r\n  }\r\n  onDeleteClick(event: any, i: any) {\r\n    this.deleteClick.emit({ event, i });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.MySubscription.unsubscribe();\r\n  }\r\n\r\n  @ContentChild('selectionBox') selectionBox!: CheckBoxPrinterComponent;\r\n\r\n  isAllCheckedChange(b: boolean) {\r\n    if (b) {\r\n      this.selectionBox.check();\r\n    } else {\r\n      this.selectionBox.unCheck();\r\n    }\r\n  }\r\n}\r\n", "<div class=\"card card-primary\">\n  <div class=\"card-header\">\n    <div class=\"row\">\n      <div class=\"col-11\">\n        <div>#{{ project.projectID }}</div>\n        <h5>{{ project.projectName }}</h5>\n      </div>\n      <div class=\"col-1\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <table class=\"table table-borderless table-sm\" [hidden]=\"hideDetails\">\n      <tr>\n        <th>Date of Start</th>\n        <td>{{ project.dateOfStart }}</td>\n      </tr>\n      <tr>\n        <th>Team Size</th>\n        <td>{{ project.teamSize }}</td>\n        <!-- <td>{{ project.teamSize | numberToWords }}</td> -->\n      </tr>\n      <tr>\n        <th>Client Location</th>\n        <td>{{ project.clientLocation?.clientLocationName }}</td>\n      </tr>\n      <tr>\n        <th>Status</th>\n        <td>{{ project.status }}</td>\n      </tr>\n    </table>\n  </div>\n  <div class=\"card-footer\">\n    <button\n      class=\"btn btn-info\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#editModal\"\n      (click)=\"onEditClick($event, i)\"\n    >\n      Edit\n    </button>\n    <button\n      class=\"btn btn-warning\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#deleteModal\"\n      (click)=\"onDeleteClick($event, i)\"\n    >\n      Delete\n    </button>\n\n    <a\n      [routerLink]=\"['/admin', 'projects', 'view', project.projectID]\"\n      class=\"mr-2 btn btn-primary\"\n      >Learn More</a\n    >\n    <!-- /projects/view/1 -->\n  </div>\n</div>\n", "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box-printer',\n  templateUrl: './check-box-printer.component.html',\n  styleUrl: './check-box-printer.component.scss',\n})\nexport class CheckBoxPrinterComponent implements OnInit {\n  isChecked: boolean = false;\n  constructor() {}\n  ngOnInit(): void {}\n  check() {\n    this.isChecked = true;\n  }\n  unCheck() {\n    this.isChecked = false;\n  }\n}\n", "<div>\n  <input\n    type=\"checkbox\"\n    value=\"true\"\n    name=\"isChecked\"\n    id=\"isChecked\"\n    [(ngModel)]=\"isChecked\"\n  />\n</div>\n", "import {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport { ProjectsService } from '../../../services/projects.service';\r\nimport { Project } from '../../../models/project.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ClientLocation } from '../../../models/client-location.model';\r\nimport { ClientLocationService } from '../../../services/client-location.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ProjectComponent } from '../project/project.component';\r\nimport { FilterPipe } from '../../../pipes/filter.pipe';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrl: './projects.component.scss',\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n  projects: Project[] = [];\r\n  //clientLocations: ClientLocation[] = [];\r\n  clientLocations!: Observable<ClientLocation[]>;\r\n  showLoading: boolean = true;\r\n  newProject: Project = new Project();\r\n  editProject: Project = new Project();\r\n  editIndex: any = null;\r\n  deleteProject: Project = new Project();\r\n  deleteIndex: any = null;\r\n  pipe = new DatePipe('en-US');\r\n  searchBy: string = 'projectName';\r\n  searchText: string = '';\r\n\r\n  currentPageIndex: number = 0;\r\n  pages: any[] = [];\r\n  pageSize: number = 3;\r\n\r\n  @ViewChild('newForm') newForm!: NgForm;\r\n  @ViewChild('editForm') editForm!: NgForm;\r\n  @ViewChild('newFormCancel') newFormCancel!: ElementRef;\r\n  @ViewChild('editFormCancel') editFormCancel!: ElementRef;\r\n  constructor(\r\n    private projectsService: ProjectsService,\r\n    private clientLocationService: ClientLocationService\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.projectsService.getAllProjects().subscribe({\r\n      next: (projects) => {\r\n        this.projects = projects; // Update the component's list with received data\r\n        this.showLoading = false;\r\n        this.calculateNoOfPages();\r\n      },\r\n    });\r\n\r\n    // this.clientLocationService.getClientLocations().subscribe({\r\n    //   next: (response) => {\r\n    //     this.clientLocations = response;\r\n    //   },\r\n    // });\r\n\r\n    this.clientLocations = this.clientLocationService.getClientLocations();\r\n  }\r\n\r\n  isAllChecked: boolean = false;\r\n\r\n  @ViewChildren('prj') projs!: QueryList<ProjectComponent>;\r\n\r\n  isAllCheckedChange(event: any) {\r\n    let proj = this.projs.toArray();\r\n    for (let i = 0; i < proj.length; i++) {\r\n      proj[i].isAllCheckedChange(this.isAllChecked);\r\n    }\r\n  }\r\n\r\n  calculateNoOfPages() {\r\n    let filterPipe = new FilterPipe();\r\n    var resultProjects = filterPipe.transform(\r\n      this.projects,\r\n      this.searchBy,\r\n      this.searchText\r\n    );\r\n\r\n    var noOfPages = Math.ceil(resultProjects.length / this.pageSize);\r\n\r\n    this.pages = [];\r\n    for (let i = 0; i < noOfPages; i++) {\r\n      this.pages.push({ pageIndex: i });\r\n    }\r\n\r\n    this.currentPageIndex = 0;\r\n  }\r\n\r\n  onSaveClick() {\r\n    if (this.newForm.valid) {\r\n      this.newProject.clientLocation.clientLocationID = 0;\r\n      this.newProject.projectID = 0;\r\n      this.newProject.active = true;\r\n      //console.log(`New Project = ${JSON.stringify(this.newProject)}`);\r\n\r\n      this.projectsService.insertProject(this.newProject).subscribe({\r\n        next: (response) => {\r\n          //Add Project to Grid\r\n          var p: Project = new Project();\r\n          p.projectID = response.projectID;\r\n          p.projectName = response.projectName;\r\n          p.dateOfStart = response.dateOfStart;\r\n          // p.dateOfStart = response.dateOfStart.split('/').reverse().join('-');\r\n          p.teamSize = response.teamSize;\r\n          p.clientLocation = response.clientLocation;\r\n          p.active = response.active;\r\n          p.clientLocationID = response.clientLocationID;\r\n          p.status = response.status;\r\n          this.projects.push(p);\r\n          //Clear New Project Dialog - TextBoxes\r\n          this.newProject = new Project();\r\n\r\n          this.newFormCancel.nativeElement.click();\r\n          this.calculateNoOfPages();\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditClick(event: any, projectID: number) {\r\n    this.editForm.resetForm();\r\n    var index = this.projects.findIndex(\r\n      (project) => project.projectID === projectID\r\n    );\r\n    setTimeout(() => {\r\n      this.editProject.projectID = this.projects[index].projectID;\r\n      this.editProject.projectName = this.projects[index].projectName;\r\n      this.editProject.dateOfStart =\r\n        this.pipe\r\n          .transform(this.projects[index].dateOfStart, 'yyyy-MM-dd')\r\n          ?.toString() ?? '';\r\n      this.editProject.teamSize = this.projects[index].teamSize;\r\n      this.editProject.active = this.projects[index].active;\r\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\r\n      this.editProject.clientLocation = this.projects[index].clientLocation;\r\n      this.editProject.status = this.projects[index].status;\r\n      this.editIndex = index;\r\n    }, 100);\r\n  }\r\n\r\n  onUpdateClick() {\r\n    if (this.editForm.valid) {\r\n      this.projectsService.updateProject(this.editProject).subscribe({\r\n        next: (response) => {\r\n          var p: Project = new Project();\r\n          p.projectID = response.projectID;\r\n          p.projectName = response.projectName;\r\n          p.dateOfStart = response.dateOfStart;\r\n          p.teamSize = response.teamSize;\r\n          p.clientLocation = response.clientLocation;\r\n          p.active = response.active;\r\n          p.clientLocationID = response.clientLocationID;\r\n          p.status = response.status;\r\n          //const data: Project = { ...response };\r\n          //console.log(`Spread values : ${data}`);\r\n          this.projects[this.editIndex] = p;\r\n\r\n          this.editProject = new Project();\r\n\r\n          this.editFormCancel.nativeElement.click();\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  onDeleteClick(event: any, projectID: number) {\r\n    var index = this.projects.findIndex(\r\n      (project) => project.projectID === projectID\r\n    );\r\n    this.deleteIndex = index;\r\n    this.deleteProject.projectID = this.projects[index].projectID;\r\n    this.deleteProject.projectName = this.projects[index].projectName;\r\n    this.deleteProject.dateOfStart =\r\n      this.pipe\r\n        .transform(this.projects[index].dateOfStart, 'yyyy-MM-dd')\r\n        ?.toString() ?? '';\r\n    this.deleteProject.teamSize = this.projects[index].teamSize;\r\n    this.calculateNoOfPages();\r\n  }\r\n\r\n  onDeleteConfirmClick() {\r\n    this.projectsService.deleteProject(this.deleteProject.projectID).subscribe({\r\n      next: (response) => {\r\n        this.projects.splice(this.deleteIndex, 1);\r\n        this.deleteProject = new Project();\r\n      },\r\n    });\r\n  }\r\n\r\n  onSearchClick() {\r\n    // this.projectsService\r\n    //   .searchProjects(this.searchBy, this.searchText)\r\n    //   .subscribe({\r\n    //     next: (response) => {\r\n    //       this.projects = response;\r\n    //     },\r\n    //   });\r\n  }\r\n  onSearchTextKeyup(event: any) {\r\n    this.calculateNoOfPages();\r\n  }\r\n\r\n  onNewClick(event: any) {\r\n    this.newForm.resetForm();\r\n  }\r\n\r\n  onHideShowDetails(event: any) {\r\n    this.projectsService.toggleDetails();\r\n  }\r\n\r\n  onPageIndexClicked(pageIndex: number) {\r\n    this.currentPageIndex = pageIndex;\r\n  }\r\n}\r\n", "<h1>\n  Projects\n  <i\n    class=\"fa fa-circle-o-notch fa-spin\"\n    style=\"font-size: 34px\"\n    *ngIf=\"showLoading\"\n  ></i>\n</h1>\n<div class=\"row\">\n  <div class=\"col-xl-9 mx-auto\">\n    <div class=\"form-group from-row\">\n      <div class=\"d-flex gap-2\">\n        <button\n          class=\"btn btn-primary\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#newModal\"\n          (click)=\"onNewClick($event)\"\n        >\n          Create a Project\n        </button>\n        <button class=\"btn btn-secondary\" (click)=\"onHideShowDetails($event)\">\n          Hide/Show Details\n        </button>\n        <div class=\"custom-control custom-checkbox\">\n          <input\n            type=\"checkbox\"\n            value=\"true\"\n            name=\"isAllChecked\"\n            id=\"isAllChecked\"\n            [(ngModel)]=\"isAllChecked\"\n            class=\"custom-control-input\"\n            (change)=\"isAllCheckedChange($event)\"\n          />\n          <label for=\"isAllChecked\" class=\"custom-control-label\"></label>\n        </div>\n      </div>\n      <div class=\"d-flex gap-2 mt-2 mb-2\">\n        <label for=\"drpSearchBy\" class=\"col-form-label col-2 text-right\"\n          >Search By</label\n        >\n        <div class=\"col-3\">\n          <select\n            name=\"SearchBy\"\n            id=\"drpSearchBy\"\n            class=\"drpSearchBy form-control\"\n            [(ngModel)]=\"searchBy\"\n          >\n            <option value=\"projectID\">Project ID</option>\n            <option value=\"projectName\">Project Name</option>\n            <option value=\"dateOfStart\">Date Of Start</option>\n            <option value=\"teamSize\">Team Size</option>\n          </select>\n        </div>\n\n        <label for=\"txtSearchText\" class=\"col-form-label col-1 text-right\"\n          >Search:</label\n        >\n        <div class=\"col-4\">\n          <div class=\"input-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"txtSearchText\"\n              name=\"SearchText\"\n              [(ngModel)]=\"searchText\"\n              (keyup)=\"onSearchTextKeyup($event)\"\n            />\n            <!-- <div class=\"input-group-append\" (click)=\"onSearchClick()\">\n              <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n            </div> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-xl-12 mx-auto\">\n    <div class=\"row\">\n      <div\n        class=\"col-md-4 mb-1 projectcard\"\n        *ngFor=\"\n          let project of projects\n            | filter : searchBy : searchText\n            | paging : currentPageIndex : pageSize;\n          let i = index\n        \"\n      >\n        <app-project\n          #prj\n          [currentProject]=\"project\"\n          [recordIndex]=\"project.projectID\"\n          (editClick)=\"onEditClick($event, project.projectID)\"\n          (deleteClick)=\"onDeleteClick($event, project.projectID)\"\n        >\n          <app-check-box-printer #selectionBox></app-check-box-printer>\n        </app-project>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <ul class=\"pagination justify-content-center mt-1\">\n          <li\n            class=\"page-item\"\n            *ngFor=\"let page of pages\"\n            (click)=\"onPageIndexClicked(page.pageIndex)\"\n            [ngClass]=\"{ active: page.pageIndex == currentPageIndex }\"\n          >\n            <a href=\"#\" class=\"page-link\" onclick=\"return false\">{{\n              page.pageIndex + 1\n            }}</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- Create Project -->\n<form\n  #newForm=\"ngForm\"\n  novalidate=\"novalidate\"\n  appClientLocationStatusValidator\n>\n  <div class=\"modal\" role=\"dialog\" id=\"newModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width: 700px\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Project</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtNewProjectName\" class=\"col-sm-4 col-form-label\"\n              >Project Name</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtNewProjectName\"\n                style=\"width: 150px\"\n                class=\"form-control\"\n                placeholder=\"Project Name\"\n                name=\"ProjectName\"\n                [(ngModel)]=\"newProject.projectName\"\n                required=\"required\"\n                pattern=\"^[A-Za-z][A-Za-z ]*$\"\n                minlength=\"3\"\n                maxlength=\"30\"\n                #newProjectName=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    newProjectName.invalid &&\n                    (newProjectName.dirty ||\n                      newProjectName.touched ||\n                      newForm.submitted),\n                  'is-valid':\n                    newProjectName.valid &&\n                    (newProjectName.dirty ||\n                      newProjectName.touched ||\n                      newForm.submitted)\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newProjectName.invalid &&\n                  (newProjectName.dirty ||\n                    newProjectName.touched ||\n                    newForm.submitted) &&\n                  newProjectName.errors?.['required']\n                \"\n                >Project Name can't be blank</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newProjectName.invalid &&\n                  (newProjectName.dirty ||\n                    newProjectName.touched ||\n                    newForm.submitted) &&\n                  newProjectName.errors?.['pattern']\n                \"\n                >Project Name can contain alphabets,digits,dot,hypen and space\n                only</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newProjectName.invalid &&\n                  (newProjectName.dirty ||\n                    newProjectName.touched ||\n                    newForm.submitted) &&\n                  newProjectName.errors?.['minlength']\n                \"\n                >Project Name should be atleast 3 characters long</span\n              >\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"txtNewDateOfStart\" class=\"col-sm-4 col-form-label\"\n              >Date Of Start</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"date\"\n                id=\"txtNewDateOfStart\"\n                style=\"width: 180px\"\n                class=\"form-control\"\n                placeholder=\"Date Of Start\"\n                name=\"DateOfStart\"\n                [(ngModel)]=\"newProject.dateOfStart\"\n                required=\"required\"\n                #newDateOfStart=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    newDateOfStart.invalid &&\n                    (newDateOfStart.dirty ||\n                      newDateOfStart.touched ||\n                      newForm.submitted),\n                  'is-valid':\n                    newDateOfStart.valid &&\n                    (newDateOfStart.dirty ||\n                      newDateOfStart.touched ||\n                      newForm.submitted)\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newDateOfStart.invalid &&\n                  (newDateOfStart.dirty ||\n                    newDateOfStart.touched ||\n                    newForm.submitted) &&\n                  newDateOfStart.errors?.['required']\n                \"\n                >Date of Start is required field</span\n              >\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"txtTeamSize\" class=\"col-sm-4 col-form-label\"\n              >Team Size</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtTeamSize\"\n                style=\"width: 100px\"\n                class=\"form-control\"\n                placeholder=\"Team Size\"\n                name=\"TeamSize\"\n                [(ngModel)]=\"newProject.teamSize\"\n                pattern=\"^[0-9]+$\"\n                appTeamSizeValidator=\"5\"\n                maxlength=\"7\"\n                #newTeamSize=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    newTeamSize.invalid &&\n                    (newTeamSize.dirty ||\n                      newTeamSize.touched ||\n                      newForm.submitted),\n                  'is-valid':\n                    newTeamSize.valid &&\n                    (newTeamSize.dirty ||\n                      newTeamSize.touched ||\n                      newForm.submitted)\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newTeamSize.invalid &&\n                  (newTeamSize.dirty ||\n                    newTeamSize.touched ||\n                    newForm.submitted) &&\n                  newTeamSize.errors?.['pattern']\n                \"\n                >Team Size should be a number</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newTeamSize.invalid &&\n                  (newTeamSize.dirty ||\n                    newTeamSize.touched ||\n                    newForm.submitted) &&\n                  newTeamSize.errors!['divisible']\n                \"\n                >Team Size should be divisble by 5</span\n              >\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"chkbox\" class=\"col-sm-4 col-form-label\"></label>\n            <div class=\"col-sm-8\" id=\"chkbox\">\n              <div class=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  id=\"chkNewActive\"\n                  value=\"true\"\n                  class=\"form-check-input\"\n                  [(ngModel)]=\"newProject.active\"\n                  name=\"active\"\n                />\n                <label for=\"chkNewActive\" class=\"form-check-label\"\n                  >Active</label\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"rbNewStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"rbNewStatusInForce\"\n                  value=\"In Force\"\n                  class=\"form-check-input\"\n                  name=\"Status\"\n                  [(ngModel)]=\"newProject.status\"\n                  required=\"required\"\n                  #newStatusInForce=\"ngModel\"\n                />\n                <label for=\"rbNewStatusInForce\" class=\"form-check-label\"\n                  >In Force</label\n                >\n              </div>\n              <div class=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"rbNewStatusSupport\"\n                  value=\"Support\"\n                  class=\"form-check-input\"\n                  name=\"Status\"\n                  [(ngModel)]=\"newProject.status\"\n                  required=\"required\"\n                  #newStatusSupport=\"ngModel\"\n                />\n                <label for=\"rbNewStatusSupport\" class=\"form-check-label\"\n                  >Support</label\n                >\n              </div>\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newStatusInForce.invalid &&\n                  (newStatusInForce.dirty ||\n                    newStatusInForce.touched ||\n                    newForm.submitted) &&\n                  newStatusInForce.errors?.['required']\n                \"\n                >Please select a status</span\n              >\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpNewClientLocation\" class=\"col-sm-4 col-form-label\"\n              >Client Location</label\n            >\n            <div class=\"col-sm-8\">\n              <select\n                id=\"drpNewClientLocation\"\n                class=\"form-control\"\n                name=\"ClientLocation\"\n                [(ngModel)]=\"newProject.clientLocationID\"\n                required=\"required\"\n                #newClientLocation=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    newClientLocation.invalid &&\n                    (newClientLocation.dirty ||\n                      newClientLocation.touched ||\n                      newForm.submitted),\n                  'is-valid':\n                    newClientLocation.valid &&\n                    (newClientLocation.dirty ||\n                      newClientLocation.touched ||\n                      newForm.submitted)\n                }\"\n              >\n                <option value=\"null\">Please Select</option>\n                <option\n                  *ngFor=\"let clientLocation of clientLocations | async\"\n                  [value]=\"clientLocation.clientLocationID\"\n                >\n                  {{ clientLocation.clientLocationName }}\n                </option>\n              </select>\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newClientLocation.invalid &&\n                  (newClientLocation.dirty ||\n                    newClientLocation.touched ||\n                    newForm.submitted) &&\n                  newClientLocation.errors?.['required']\n                \"\n                >Client Location is required field</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newForm.invalid &&\n                  (newForm.dirty ||\n                    newForm.touched ||\n                    newForm.submitted) &&\n                  newForm.errors?.['clientLocationStatus']\n                \"\n                >Support Projects are not allowed at Tokyo</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            #newFormCancel\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Project -->\n<form\n  #editForm=\"ngForm\"\n  novalidate=\"novalidate\"\n  appClientLocationStatusValidator\n>\n  <div class=\"modal\" role=\"dialog\" id=\"editModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\" style=\"width: 700px\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Edit Project</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectID\" class=\"col-sm-4 col-form-label\"\n              >Project ID</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtEditProjectID\"\n                style=\"width: 100px\"\n                class=\"form-control-plain-text\"\n                placeholder=\"Project ID\"\n                name=\"ProjectID\"\n                [(ngModel)]=\"editProject.projectID\"\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"txtEditProjectName\" class=\"col-sm-4 col-form-label\"\n              >Project Name</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtEditProjectName\"\n                style=\"width: 350px\"\n                class=\"form-control\"\n                placeholder=\"Project Name\"\n                name=\"ProjectName\"\n                [(ngModel)]=\"editProject.projectName\"\n                required=\"required\"\n                pattern=\"^[A-Za-z][A-Za-z ]*$\"\n                minlength=\"3\"\n                maxlength=\"30\"\n                #editProjectName=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    editProjectName.invalid &&\n                    (editProjectName.dirty ||\n                      editProjectName.touched ||\n                      editForm.submitted),\n                  'is-valid':\n                    editProjectName.valid &&\n                    (editProjectName.dirty ||\n                      editProjectName.touched ||\n                      editForm.submitted)\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                editProjectName.invalid &&\n                (editProjectName.dirty ||\n                  editProjectName.touched ||\n                  editForm.submitted) &&\n                editProjectName.errors?.['required']\n              \"\n                >Project Name can't be blank</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                editProjectName.invalid &&\n                (editProjectName.dirty ||\n                  editProjectName.touched ||\n                  editForm.submitted) &&\n                editProjectName.errors?.['pattern']\n              \"\n                >Project Name can contain alphabets,digits,dot,hypen and space\n                only</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                editProjectName.invalid &&\n                (editProjectName.dirty ||\n                  editProjectName.touched ||\n                  editForm.submitted) &&\n                editProjectName.errors?.['minlength']\n              \"\n                >Project Name should be atleast 3 characters long</span\n              >\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"txtEditDateOfStart\" class=\"col-sm-4 col-form-label\"\n              >Date Of Start</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"date\"\n                id=\"txtEditDateOfStart\"\n                style=\"width: 180px\"\n                class=\"form-control\"\n                placeholder=\"Date Of Start\"\n                name=\"DateOfStart\"\n                [(ngModel)]=\"editProject.dateOfStart\"\n                required=\"required\"\n                #editDateOfStart=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    editDateOfStart.invalid &&\n                    (editDateOfStart.dirty ||\n                      editDateOfStart.touched ||\n                      editForm.submitted),\n                  'is-valid':\n                    editDateOfStart.valid &&\n                    (editDateOfStart.dirty ||\n                      editDateOfStart.touched ||\n                      editForm.submitted)\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                editDateOfStart.invalid &&\n                (editDateOfStart.dirty ||\n                  editDateOfStart.touched ||\n                  editForm.submitted) &&\n                editDateOfStart.errors?.['required']\n              \"\n                >Date of Start is required field</span\n              >\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"txtEditTeamSize\" class=\"col-sm-4 col-form-label\"\n              >Team Size</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtEditTeamSize\"\n                style=\"width: 150px\"\n                class=\"form-control\"\n                placeholder=\"Team Size\"\n                name=\"TeamSize\"\n                [(ngModel)]=\"editProject.teamSize\"\n                pattern=\"^[0-9]+$\"\n                maxlength=\"7\"\n                appTeamSizeValidator=\"5\"\n                #editTeamSize=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    editTeamSize.invalid &&\n                    (editTeamSize.dirty ||\n                      editTeamSize.touched ||\n                      editForm.submitted),\n                  'is-valid':\n                    editTeamSize.valid &&\n                    (editTeamSize.dirty ||\n                      editTeamSize.touched ||\n                      editForm.submitted)\n                }\"\n              />\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                editTeamSize.invalid &&\n                (editTeamSize.dirty ||\n                  editTeamSize.touched ||\n                  editForm.submitted) &&\n                editTeamSize.errors?.['pattern']\n              \"\n                >Team Size should be a number</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  editTeamSize.invalid &&\n                  (editTeamSize.dirty ||\n                    editTeamSize.touched ||\n                    editForm.submitted) &&\n                  editTeamSize.errors!['divisible']\n                \"\n                >Team Size should be divisble by 5</span\n              >\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"chkbox\" class=\"col-sm-4 col-form-label\"></label>\n            <div class=\"col-sm-8\" id=\"chkbox\">\n              <div class=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  id=\"chkEditActive\"\n                  [value]=\"editProject.active\"\n                  [checked]=\"editProject.active === true\"\n                  class=\"form-check-input\"\n                  [(ngModel)]=\"editProject.active\"\n                  name=\"active\"\n                />\n                <label for=\"chkEditActive\" class=\"form-check-label\"\n                  >Active</label\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"rbEditStatusInForce\" class=\"col-sm-4\">Status</label>\n            <div class=\"col-sm-8\">\n              <div class=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"rbEditStatusInForce\"\n                  value=\"In Force\"\n                  class=\"form-check-input\"\n                  name=\"Status\"\n                  [(ngModel)]=\"editProject.status\"\n                  required=\"required\"\n                  #editStatusInForce=\"ngModel\"\n                />\n                <label for=\"rbEditStatusInForce\" class=\"form-check-label\"\n                  >In Force</label\n                >\n              </div>\n              <div class=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"rbEditStatusSupport\"\n                  value=\"Support\"\n                  class=\"form-check-input\"\n                  name=\"Status\"\n                  [(ngModel)]=\"editProject.status\"\n                  required=\"required\"\n                  #editStatusSupport=\"ngModel\"\n                />\n                <label for=\"rbEditStatusSupport\" class=\"form-check-label\"\n                  >Support</label\n                >\n              </div>\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                editStatusInForce.invalid &&\n                (editStatusInForce.dirty ||\n                  editStatusInForce.touched ||\n                  editForm.submitted) &&\n                editStatusInForce.errors?.['required']\n              \"\n                >Please select a status</span\n              >\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"drpEditClientLocation\" class=\"col-sm-4 col-form-label\"\n              >Client Location</label\n            >\n            <div class=\"col-sm-8\">\n              <select\n                id=\"drpEditClientLocation\"\n                class=\"form-control\"\n                name=\"ClientLocation\"\n                [(ngModel)]=\"editProject.clientLocationID\"\n                required=\"required\"\n                #editClientLocation=\"ngModel\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    editClientLocation.invalid &&\n                    (editClientLocation.dirty ||\n                      editClientLocation.touched ||\n                      editForm.submitted),\n                  'is-valid':\n                    editClientLocation.valid &&\n                    (editClientLocation.dirty ||\n                      editClientLocation.touched ||\n                      editForm.submitted)\n                }\"\n              >\n                <option value=\"null\">Please Select</option>\n                <option\n                  *ngFor=\"let clientLocation of clientLocations | async\"\n                  [value]=\"clientLocation.clientLocationID\"\n                >\n                  {{ clientLocation.clientLocationName }}\n                </option>\n              </select>\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  editClientLocation.invalid &&\n                  (editClientLocation.dirty ||\n                    editClientLocation.touched ||\n                    editForm.submitted) &&\n                  editClientLocation.errors?.['required']\n                \"\n                >Client Location is required field</span\n              >\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  editForm.invalid &&\n                  (editForm.dirty ||\n                    editForm.touched ||\n                    editForm.submitted) &&\n                  editForm.errors?.['clientLocationStatus']\n                \"\n                >Support Projects are not allowed at Tokyo</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            #editFormCancel\n            data-bs-dismiss=\"modal\"\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">\n            Update\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Delete Project -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <div class=\"modal-title\">Delete Project</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"text-warning\">Are you sure to delete this Project?</div>\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectID\" class=\"col-sm-4 col-form-label\"\n              >Project ID</label\n            >\n            <div class=\"col-sm-10\">\n              <input\n                type=\"text\"\n                id=\"txtDeleteProjectID\"\n                style=\"width: 100px\"\n                class=\"form-control-plain-text\"\n                placeholder=\"Project ID\"\n                name=\"ProjectID\"\n                [(ngModel)]=\"deleteProject.projectID\"\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteProjectName\" class=\"col-sm-4 col-form-label\"\n              >Project Name</label\n            >\n            <div class=\"col-sm-10\">\n              <input\n                type=\"text\"\n                id=\"txtDeleteProjectName\"\n                style=\"width: 350px\"\n                class=\"form-control\"\n                placeholder=\"Project Name\"\n                name=\"ProjectName\"\n                [(ngModel)]=\"deleteProject.projectName\"\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-bs-dismiss=\"modal\">\n            Cancel\n          </button>\n          <button\n            class=\"btn btn-success\"\n            data-bs-dismiss=\"modal\"\n            (click)=\"onDeleteConfirmClick()\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n", "export class Country {\n  countryID: number = 0;\n  countryName: string = '';\n  constructor() {}\n  // constructor(countryIDParam: number, countryNameParam: string) {\n  //   this.countryID = countryIDParam;\n  //   this.countryName = countryNameParam;\n  // }\n}\n", "import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Country } from '../../../models/country.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CountriesService } from '../../../services/countries.service';\nimport { FilterPipe } from '../../../pipes/filter.pipe';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrl: './countries.component.scss',\n})\nexport class CountriesComponent implements OnInit {\n  //* Objects for holding the model data\n  countries: Country[] = [];\n  showingLoading: boolean = false;\n\n  newformSubmitted = false;\n  editformSubmitted = false;\n\n  //* Objects for delete\n  deleteCountry: Country = new Country();\n  editIndex!: number;\n  deleteIndex!: number;\n\n  //* Properties for Searching\n  searchBy: string = 'countryName';\n  searchText: string = '';\n\n  //* Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //* Reactive Forms\n\n  newForm!: FormGroup;\n  editForm!: FormGroup;\n\n  //* AutoFocus TextBoxes\n  @ViewChild('defaultTextBox_New') defaultTextBox_New!: ElementRef;\n  @ViewChild('defaultTextBox_Edit') defaultTextBox_Edit!: ElementRef;\n  @ViewChild('newFormCancel') newFormCancel!: ElementRef;\n  @ViewChild('editFormCancel') editFormCancel!: ElementRef;\n\n  //* Sorting\n  sortBy: string = 'countryName';\n  sortOrder: string = 'ASC'; //ASC and DESC\n\n  constructor(\n    private countriesService: CountriesService,\n    private formBuilder: FormBuilder\n  ) {}\n  ngOnInit(): void {\n    //* Get data from database\n    this.countriesService.getCountries().subscribe({\n      next: (response: Country[]) => {\n        this.countries = response;\n        this.showingLoading = false;\n        this.calculateNoOfPages();\n      },\n    });\n\n    //* Create the newForm\n    this.newForm = this.formBuilder.group({\n      countryID: this.formBuilder.control(null),\n      countryName: this.formBuilder.control(null, [Validators.required]),\n    });\n\n    //* Create the editForm\n    this.editForm = this.formBuilder.group({\n      countryID: this.formBuilder.control(null),\n      countryName: this.formBuilder.control(null, [Validators.required]),\n    });\n  }\n  calculateNoOfPages() {\n    let filterPipe = new FilterPipe();\n    var resultProjects = filterPipe.transform(\n      this.countries,\n      this.searchBy,\n      this.searchText\n    );\n\n    var noOfPages = Math.ceil(resultProjects.length / this.pageSize);\n\n    this.pages = [];\n    for (let i = 0; i < noOfPages; i++) {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(pageIndex: number) {\n    if (pageIndex >= 0 && pageIndex < this.pages.length) {\n      this.currentPageIndex = pageIndex;\n    }\n  }\n\n  onNewClick(event: any) {\n    //* reset the new form\n    this.newForm.reset({ countryID: 0 });\n    setTimeout(() => {\n      // * Focus the client location textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    this.newformSubmitted = true;\n    if (this.newForm.valid) {\n      this.countriesService.insertCountry(this.newForm.value).subscribe({\n        next: (response) => {\n          //* Add the response to the GRID\n          var p: Country = new Country();\n          p.countryID = response.countryID;\n          p.countryName = response.countryName;\n          this.countries.push(p);\n\n          //* Reset the new form\n          this.newForm.reset();\n          this.newFormCancel.nativeElement.click();\n          this.calculateNoOfPages();\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n    }\n  }\n\n  onEditClick(event: any, country: Country) {\n    //* Reset the editForm\n    this.editForm.reset();\n\n    setTimeout(() => {\n      //* Set data into editForm\n      this.editForm.patchValue(country);\n      this.editIndex = this.countries.indexOf(country);\n\n      //* Focus the client location textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick() {\n    this.editformSubmitted = true;\n    if (this.editForm.valid) {\n      this.countriesService.updateCountry(this.editForm.value).subscribe({\n        next: (response: Country) => {\n          //* Update the response in the Grid\n          this.countries[this.editIndex] = response;\n          //* Reset the editForm\n          this.editForm.reset();\n          this.editFormCancel.nativeElement.click();\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n    }\n  }\n\n  onDeleteClick(event: any, country: Country) {\n    //* Set data into delete Country\n    this.deleteCountry.countryID = country.countryID;\n    this.deleteCountry.countryName = country.countryName;\n    this.deleteIndex = this.countries.indexOf(country);\n  }\n\n  onDeleteConfirmClick() {\n    this.countriesService\n      .deleteCountry(this.deleteCountry.countryID)\n      .subscribe({\n        next: (response) => {\n          //* Delete the object in the Grid\n          this.countries.splice(this.deleteIndex, 1);\n\n          //* Clear delete country\n          this.deleteCountry = new Country();\n\n          //* Recalculate the pages\n          this.calculateNoOfPages();\n        },\n        error: (err) => {},\n      });\n  }\n  onSearchTextChange(event: any) {\n    //* Recalculate the calculateNoOfPages\n    this.calculateNoOfPages();\n  }\n}\n", "<!-- Heading Starts -->\n<h5>\n  Countries\n  <i\n    class=\"fa fa-circle-o-notch fa-spin\"\n    style=\"font-size: 24px\"\n    *ngIf=\"showingLoading\"\n  ></i>\n</h5>\n<!-- Heading Ends -->\n\n<div class=\"row\">\n  <!-- Create Box and Search Box Starts -->\n  <div class=\"col-xl-12\">\n    <div class=\"form-group row\">\n      <div class=\"col-md-12 col-lg-12 col-xl-2\">\n        <button\n          class=\"btn btn-primary\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#newCountryModal\"\n          (click)=\"onNewClick($event)\"\n        >\n          Create Country\n        </button>\n      </div>\n\n      <label\n        for=\"drpSearchBy\"\n        class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\"\n        >Search by:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <select\n          class=\"form-control\"\n          id=\"drpSearchBy\"\n          name=\"SearchBy\"\n          [(ngModel)]=\"searchBy\"\n        >\n          <option value=\"countryName\">Country Name</option>\n        </select>\n      </div>\n\n      <label\n        for=\"textSearchText\"\n        class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\"\n        >Search:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"txtSearchText\"\n            name=\"SearchText\"\n            [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextChange($event)\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Create Box and Search Box Ends -->\n\n  <!-- Grid Box Starts -->\n  <div class=\"col-xl-12\">\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-9 mx-auto\">\n        <table class=\"table\">\n          <tr class=\"table-dark text-dark\">\n            <th>\n              Country Name\n              <i\n                class=\"fa fa-sort hand-icon\"\n                *ngIf=\"sortBy != 'countryName'\"\n                (click)=\"sortBy = 'countryName'; sortOrder = 'ASC'\"\n              ></i>\n              <i\n                class=\"fa fa-sort-up hand-icon text-primary\"\n                *ngIf=\"sortBy == 'countryName' && sortOrder == 'ASC'\"\n                (click)=\"sortOrder = 'DESC'\"\n              ></i>\n              <i\n                class=\"fa fa-sort-down hand-icon text-primary\"\n                *ngIf=\"sortBy == 'countryName' && sortOrder == 'DESC'\"\n                (click)=\"sortOrder = 'ASC'\"\n              ></i>\n            </th>\n\n            <th class=\"text-center\" style=\"width: 200px\">Actions</th>\n          </tr>\n\n          <tr\n            *ngFor=\"\n              let country of countries\n                | filter : searchBy : searchText\n                | sort : sortBy : sortOrder\n                | paging : currentPageIndex : pageSize;\n              let i = index\n            \"\n          >\n            <td>{{ country.countryName }}</td>\n            <td class=\"text-center\">\n              <button\n                class=\"btn btn-info\"\n                (click)=\"onEditClick($event, country)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#editCountryModal\"\n              >\n                Edit</button\n              >&nbsp;\n              <button\n                class=\"btn btn-warning\"\n                (click)=\"onDeleteClick($event, country)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteCountryModal\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <!-- Grid Box Ends -->\n\n  <!-- Paging Box Starts -->\n  <div class=\"col-12\">\n    <ul class=\"pagination justify-content-center mt-1\">\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Prev</a\n        >\n      </li>\n\n      <ng-container *ngIf=\"pages.length <= 10\">\n        <li\n          class=\"page-item\"\n          *ngFor=\"let page of pages\"\n          [ngClass]=\"{ active: page.pageIndex == currentPageIndex }\"\n          (click)=\"onPageIndexClicked(page.pageIndex)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            page.pageIndex + 1\n          }}</a>\n        </li>\n      </ng-container>\n\n      <ng-container *ngIf=\"pages.length > 10\">\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 0 }\"\n          (click)=\"onPageIndexClicked(0)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 1 }\"\n          (click)=\"onPageIndexClicked(1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n        </li>\n\n        <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n          &nbsp;...&nbsp;\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"'active'\"\n          (click)=\"onPageIndexClicked(currentPageIndex)\"\n          *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            currentPageIndex + 1\n          }}</a>\n        </li>\n\n        <li>&nbsp;...&nbsp;</li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 2 }\"\n          (click)=\"onPageIndexClicked(pages.length - 2)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length - 1\n          }}</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 1 }\"\n          (click)=\"onPageIndexClicked(pages.length - 1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length\n          }}</a>\n        </li>\n      </ng-container>\n\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Next</a\n        >\n      </li>\n    </ul>\n  </div>\n  <!-- Paging Box Ends -->\n</div>\n\n<!-- New Modal Starts -->\n<form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"newCountryModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Country</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtNewCountryName\" class=\"col-sm-4 col-form-label\"\n              >Country Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtNewCountryName\"\n                class=\"form-control\"\n                placeholder=\"Country Name\"\n                name=\"CountryName\"\n                formControlName=\"countryName\"\n                maxlength=\"30\"\n                #defaultTextBox_New\n                [ngClass]=\"{\n                  'is-invalid':\n                    newForm.get('countryName')?.invalid &&\n                    (newForm.get('countryName')?.dirty ||\n                      newForm.get('countryName')?.touched ||\n                      newformSubmitted),\n                  'is-valid':\n                    newForm.get('countryName')?.valid &&\n                    (newForm.get('countryName')?.dirty ||\n                      newForm.get('countryName')?.touched ||\n                      newformSubmitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newForm.get('countryName')?.invalid &&\n                  (newForm.get('countryName')?.dirty ||\n                    newForm.get('countryName')?.touched ||\n                    newformSubmitted) &&\n                  (newForm.get('countryName')?.errors)!['required']\n                \"\n                >Country Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"newCountryFormCancel\"\n            type=\"button\"\n            #newFormCancel\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<!-- New Modal Ends -->\n\n<!-- Edit Modal Starts -->\n<form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"editCountryModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Edit Country</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtEditCountryName\" class=\"col-sm-4 col-form-label\"\n              >Country Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtEditCountryName\"\n                class=\"form-control\"\n                placeholder=\"Country Name\"\n                name=\"CountryName\"\n                formControlName=\"countryName\"\n                maxlength=\"30\"\n                #defaultTextBox_Edit\n                [ngClass]=\"{\n                  'is-invalid':\n                    editForm.get('countryName')?.invalid &&\n                    (editForm.get('countryName')?.dirty ||\n                      editForm.get('countryName')?.touched ||\n                      editformSubmitted),\n                  'is-valid':\n                    editForm.get('countryName')?.valid &&\n                    (editForm.get('countryName')?.dirty ||\n                      editForm.get('countryName')?.touched ||\n                      editformSubmitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  editForm.get('countryName')?.invalid &&\n                  (editForm.get('countryName')?.dirty ||\n                    editForm.get('countryName')?.touched ||\n                    editformSubmitted) &&\n                  (editForm.get('countryName')?.errors)!['required']\n                \"\n                >Country Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"editCountryFormCancel\"\n            type=\"button\"\n            #editFormCancel\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">\n            Update\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<!-- Edit Modal Ends -->\n\n<!-- Delete Modal Starts -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteCountryModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Delete Country</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"text-warning\">Are you sure to delete this Country?</div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteCountryName\" class=\"col-sm-4 col-form-label\"\n              >Country Name</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtDeleteCountryName\"\n                class=\"form-control-plain-text\"\n                style=\"width: 300px\"\n                placeholder=\"Country Name\"\n                name=\"CountryName\"\n                [(ngModel)]=\"deleteCountry.countryName\"\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-bs-dismiss=\"modal\" type=\"button\">\n            Cancel\n          </button>\n          <button\n            class=\"btn btn-danger\"\n            data-bs-dismiss=\"modal\"\n            (click)=\"onDeleteConfirmClick()\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<!-- Delete Modal Ends -->\n", "import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ClientLocation } from '../../../models/client-location.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ClientLocationService } from '../../../services/client-location.service';\nimport { FilterPipe } from '../../../pipes/filter.pipe';\n\n@Component({\n  selector: 'app-client-locations',\n  templateUrl: './client-locations.component.html',\n  styleUrl: './client-locations.component.scss',\n})\nexport class ClientLocationsComponent implements OnInit {\n  //*Objects for holding the model data\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n  //* Objects for Delete\n  deleteClientLocation: ClientLocation = new ClientLocation();\n  editIndex!: number;\n  deleteIndex!: number;\n\n  //* Properties for Searching\n  searchBy: string = 'clientLocationName';\n  searchText: string = '';\n\n  // * Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //Properties for Sorting\n  sortBy: string = 'clientLocationName';\n  sortOrder: string = 'ASC';\n\n  //Reactive Forms\n  newForm: FormGroup | any = null;\n  editForm: FormGroup | any = null;\n\n  //Autofocus TextBoxes\n  @ViewChild('defaultTextBox_New') defaultTextBox_New: ElementRef | any = null;\n  @ViewChild('defaultTextBox_Edit') defaultTextBox_Edit: ElementRef | any =\n    null;\n\n  @ViewChild('newClientLocationFormCancel')\n  newClientLocationFormCancel!: ElementRef;\n  @ViewChild('editClientLocationFormCancel')\n  editClientLocationFormCancel!: ElementRef;\n\n  constructor(\n    private clientLocationsService: ClientLocationService,\n    private formBuilder: FormBuilder\n  ) {}\n  ngOnInit(): void {\n    //Get data from database\n    this.clientLocationsService\n      .getClientLocations()\n      .subscribe((response: ClientLocation[]) => {\n        this.clientLocations = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      });\n\n    //Create newForm\n    this.newForm = this.formBuilder.group({\n      clientLocationID: this.formBuilder.control(null),\n      clientLocationName: this.formBuilder.control(null, [Validators.required]),\n    });\n\n    //Create editForm\n    this.editForm = this.formBuilder.group({\n      clientLocationID: this.formBuilder.control(null),\n      clientLocationName: this.formBuilder.control(null, [Validators.required]),\n    });\n  }\n  calculateNoOfPages() {\n    //Get no. of Pages\n    let filterPipe = new FilterPipe();\n    var noOfPages = Math.ceil(\n      filterPipe.transform(this.clientLocations, this.searchBy, this.searchText)\n        .length / this.pageSize\n    );\n    this.pages = [];\n\n    //Generate pages\n    for (let i = 0; i < noOfPages; i++) {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(ind: number) {\n    //Set currentPageIndex\n    if (ind >= 0 && ind < this.pages.length) {\n      this.currentPageIndex = ind;\n    }\n  }\n\n  onNewClick(event: any) {\n    //reset the newForm\n    this.newForm.reset({ clientLocationID: 0 });\n    setTimeout(() => {\n      //Focus the ClientLocation textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      //Invoke the REST-API call\n      this.clientLocationsService\n        .insertClientLocation(this.newForm.value)\n        .subscribe({\n          next: (response) => {\n            //Add Response to Grid\n            var p: ClientLocation = new ClientLocation();\n            p.clientLocationID = response.clientLocationID;\n            p.clientLocationName = response.clientLocationName;\n            this.clientLocations.push(p);\n\n            //Reset the newForm\n            this.newForm.reset();\n            this.newClientLocationFormCancel.nativeElement.click();\n            this.calculateNoOfPages();\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n    }\n  }\n\n  onEditClick(event: any, clientLocation: ClientLocation) {\n    //Reset the editForm\n    this.editForm.reset();\n    setTimeout(() => {\n      //Set data into editForm\n      this.editForm.patchValue(clientLocation);\n      this.editIndex = this.clientLocations.indexOf(clientLocation);\n\n      //Focus the ClientLocation textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick() {\n    if (this.editForm.valid) {\n      //Invoke the REST-API call\n      this.clientLocationsService\n        .updateClientLocation(this.editForm.value)\n        .subscribe({\n          next: (response) => {\n            //Update the response in Grid\n            this.clientLocations[this.editIndex] = response;\n\n            //Reset the editForm\n            this.editForm.reset();\n            this.editClientLocationFormCancel.nativeElement.click();\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n    }\n  }\n\n  onDeleteClick(event: any, clientLocation: ClientLocation) {\n    //Set data into deleteClientLocation\n    this.deleteClientLocation.clientLocationID =\n      clientLocation.clientLocationID;\n    this.deleteClientLocation.clientLocationName =\n      clientLocation.clientLocationName;\n    this.deleteIndex = this.clientLocations.indexOf(clientLocation);\n  }\n\n  onDeleteConfirmClick() {\n    //Invoke the REST-API call\n    this.clientLocationsService\n      .deleteClientLocation(this.deleteClientLocation.clientLocationID)\n      .subscribe({\n        next: (response) => {\n          //Delete object in Grid\n          this.clientLocations.splice(this.deleteIndex, 1);\n\n          //Clear deleteCountry\n          this.deleteClientLocation.clientLocationID = null;\n          this.deleteClientLocation.clientLocationName = null;\n\n          //Recall the calculateNoOfPages\n          this.calculateNoOfPages();\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n  }\n\n  onSearchTextChange(event: any) {\n    this.calculateNoOfPages();\n  }\n}\n", "<h5>\n  Client Locations\n  <i\n    class=\"fa fa-circle-o-notch fa-spin\"\n    style=\"font-size: 24px\"\n    *ngIf=\"showLoading\"\n  ></i>\n</h5>\n\n<div class=\"row\">\n  <div class=\"col-xl-12\">\n    <div class=\"form-group row\">\n      <div class=\"col-md-12 col-lg-12 col-xl-2\">\n        <button\n          class=\"btn btn-primary\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#newClientLocationModal\"\n          (click)=\"onNewClick($event)\"\n        >\n          Create Client Location\n        </button>\n      </div>\n\n      <label\n        for=\"drpSearchBy\"\n        class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\"\n        >Search by:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <select\n          class=\"form-control\"\n          id=\"drpSearchBy\"\n          name=\"SearchBy\"\n          [(ngModel)]=\"searchBy\"\n        >\n          <option value=\"clientLocationName\">Client Location Name</option>\n        </select>\n      </div>\n\n      <label\n        for=\"textSearchText\"\n        class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\"\n        >Search:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"txtSearchText\"\n            name=\"SearchText\"\n            [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextChange($event)\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-9 mx-auto\">\n        <table class=\"table\">\n          <tr class=\"table-dark text-dark\">\n            <th>\n              Client Location Name\n              <i\n                class=\"fa fa-sort hand-icon\"\n                *ngIf=\"sortBy != 'clientLocationName'\"\n                (click)=\"sortBy = 'clientLocationName'; sortOrder = 'ASC'\"\n              ></i>\n\n              <i\n                class=\"fa fa-sort-up hand-icon text-primary\"\n                *ngIf=\"sortBy == 'clientLocationName' && sortOrder == 'ASC'\"\n                (click)=\"sortOrder = 'DESC'\"\n              ></i>\n\n              <i\n                class=\"fa fa-sort-down hand-icon text-primary\"\n                *ngIf=\"sortBy == 'clientLocationName' && sortOrder == 'DESC'\"\n                (click)=\"sortOrder = 'ASC'\"\n              ></i>\n            </th>\n\n            <th class=\"text-center\" style=\"width: 200px\">Actions</th>\n          </tr>\n\n          <tr\n            *ngFor=\"\n              let clientLocation of clientLocations\n                | filter : searchBy : searchText\n                | sort : sortBy : sortOrder\n                | paging : currentPageIndex : pageSize;\n              let i = index\n            \"\n          >\n            <td>{{ clientLocation.clientLocationName }}</td>\n            <td class=\"text-center\">\n              <button\n                class=\"btn btn-info\"\n                (click)=\"onEditClick($event, clientLocation)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#editClientLocationModal\"\n              >\n                Edit</button\n              >&nbsp;\n              <button\n                class=\"btn btn-warning\"\n                (click)=\"onDeleteClick($event, clientLocation)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteModal\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-12\">\n    <ul class=\"pagination justify-content-center mt-1\">\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Prev</a\n        >\n      </li>\n\n      <ng-container *ngIf=\"pages.length <= 10\">\n        <li\n          class=\"page-item\"\n          *ngFor=\"let page of pages\"\n          [ngClass]=\"{ active: page.pageIndex == currentPageIndex }\"\n          (click)=\"onPageIndexClicked(page.pageIndex)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            page.pageIndex + 1\n          }}</a>\n        </li>\n      </ng-container>\n\n      <ng-container *ngIf=\"pages.length > 10\">\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 0 }\"\n          (click)=\"onPageIndexClicked(0)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 1 }\"\n          (click)=\"onPageIndexClicked(1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n        </li>\n\n        <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n          &nbsp;...&nbsp;\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"'active'\"\n          (click)=\"onPageIndexClicked(currentPageIndex)\"\n          *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            currentPageIndex + 1\n          }}</a>\n        </li>\n\n        <li>&nbsp;...&nbsp;</li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 2 }\"\n          (click)=\"onPageIndexClicked(pages.length - 2)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length - 1\n          }}</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 1 }\"\n          (click)=\"onPageIndexClicked(pages.length - 1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length\n          }}</a>\n        </li>\n      </ng-container>\n\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Next</a\n        >\n      </li>\n    </ul>\n  </div>\n</div>\n\n<form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"newClientLocationModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Client Location</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label\n              for=\"txtNewClientLocationName\"\n              class=\"col-sm-4 col-form-label\"\n              >Client Location Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtNewClientLocationName\"\n                class=\"form-control\"\n                placeholder=\"Client Location Name\"\n                name=\"ClientLocationName\"\n                formControlName=\"clientLocationName\"\n                maxlength=\"30\"\n                #defaultTextBox_New\n                [ngClass]=\"{\n                  'is-invalid':\n                    newForm.get('clientLocationName').invalid &&\n                    (newForm.get('clientLocationName').dirty ||\n                      newForm.get('clientLocationName').touched ||\n                      newForm.submitted),\n                  'is-valid':\n                    newForm.get('clientLocationName').valid &&\n                    (newForm.get('clientLocationName').dirty ||\n                      newForm.get('clientLocationName').touched ||\n                      newForm.submitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newForm.get('clientLocationName').invalid &&\n                  (newForm.get('clientLocationName').dirty ||\n                    newForm.get('clientLocationName').touched ||\n                    newForm.submitted) &&\n                  newForm.get('clientLocationName').errors?.required\n                \"\n                >Client Location Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"newClientLocationFormCancel\"\n            type=\"button\"\n            #newClientLocationFormCancel\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Client Location -->\n<form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"editClientLocationModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Edit Client Location</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label\n              for=\"txtEditClientLocationName\"\n              class=\"col-sm-4 col-form-label\"\n              >Client Location Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtEditClientLocationName\"\n                class=\"form-control\"\n                placeholder=\"Client Location Name\"\n                name=\"ClientLocationName\"\n                formControlName=\"clientLocationName\"\n                maxlength=\"30\"\n                #defaultTextBox_Edit\n                [ngClass]=\"{\n                  'is-invalid':\n                    editForm.get('clientLocationName').invalid &&\n                    (editForm.get('clientLocationName').dirty ||\n                      editForm.get('clientLocationName').touched ||\n                      editForm.submitted),\n                  'is-valid':\n                    editForm.get('clientLocationName').valid &&\n                    (editForm.get('clientLocationName').dirty ||\n                      editForm.get('clientLocationName').touched ||\n                      editForm.submitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  editForm.get('clientLocationName').invalid &&\n                  (editForm.get('clientLocationName').dirty ||\n                    editForm.get('clientLocationName').touched ||\n                    editForm.submitted) &&\n                  editForm.get('clientLocationName').errors?.required\n                \"\n                >Client Location Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"editClientLocationFormCancel\"\n            #editClientLocationFormCancel\n            type=\"button\"\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">\n            Update\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Delete Client Location -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Delete Client Location</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"text-warning\">\n            Are you sure to delete this Client Location?\n          </div>\n\n          <div class=\"form-group row\">\n            <label\n              for=\"txtDeleteClientLocationName\"\n              class=\"col-sm-4 col-form-label\"\n              >Client Location Name</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtDeleteClientLocationName\"\n                class=\"form-control-plain-text\"\n                style=\"width: 300px\"\n                placeholder=\"Client Location Name\"\n                name=\"ClientLocationName\"\n                [(ngModel)]=\"deleteClientLocation.clientLocationName\"\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-bs-dismiss=\"modal\" type=\"button\">\n            Cancel\n          </button>\n          <button\n            class=\"btn btn-danger\"\n            data-bs-dismiss=\"modal\"\n            (click)=\"onDeleteConfirmClick()\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n", "export class TaskPriority {\n  taskPriorityID: number | any;\n  taskPriorityName: string | any;\n\n  constructor() {\n    this.taskPriorityID = null;\n    this.taskPriorityName = null;\n  }\n}\n", "import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TaskPriority } from '../../../models/task-priority.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TaskPrioritiesService } from '../../../services/task-priorities.service';\nimport { FilterPipe } from '../../../pipes/filter.pipe';\n\n@Component({\n  selector: 'app-task-priorities',\n  templateUrl: './task-priorities.component.html',\n  styleUrl: './task-priorities.component.scss',\n})\nexport class TaskPrioritiesComponent implements OnInit {\n  //Objects for Holding Model Data\n  taskPriorities: TaskPriority[] = [];\n  showLoading: boolean = true;\n\n  //Objects for Delete\n  deleteTaskPriority: TaskPriority = new TaskPriority();\n  editIndex: number | any = null;\n  deleteIndex: number | any = null;\n\n  //Properties for Searching\n  searchBy: string = 'taskPriorityName';\n  searchText: string = '';\n\n  //Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //Properties for Sorting\n  sortBy: string = 'taskPriorityName';\n  sortOrder: string = 'ASC';\n\n  //Reactive Forms\n  newForm: FormGroup | any = null;\n  editForm: FormGroup | any = null;\n\n  //Autofocus TextBoxes\n  @ViewChild('defaultTextBox_New') defaultTextBox_New: ElementRef | any = null;\n  @ViewChild('defaultTextBox_Edit') defaultTextBox_Edit: ElementRef | any =\n    null;\n  @ViewChild('newTaskPriorityFormCancel')\n  newTaskPriorityFormCancel!: ElementRef;\n  @ViewChild('editTaskPriorityFormCancel')\n  editTaskPriorityFormCancel!: ElementRef;\n\n  //Constructor\n  constructor(\n    private taskPrioritiesService: TaskPrioritiesService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    //Get data from database\n    this.taskPrioritiesService\n      .getTaskPriorities()\n      .subscribe((response: TaskPriority[]) => {\n        this.taskPriorities = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      });\n\n    //Create newForm\n    this.newForm = this.formBuilder.group({\n      taskPriorityID: this.formBuilder.control(null),\n      taskPriorityName: this.formBuilder.control(null, [Validators.required]),\n    });\n\n    //Create editForm\n    this.editForm = this.formBuilder.group({\n      taskPriorityID: this.formBuilder.control(null),\n      taskPriorityName: this.formBuilder.control(null, [Validators.required]),\n    });\n  }\n\n  calculateNoOfPages() {\n    //Get no. of Pages\n    let filterPipe = new FilterPipe();\n    var noOfPages = Math.ceil(\n      filterPipe.transform(this.taskPriorities, this.searchBy, this.searchText)\n        .length / this.pageSize\n    );\n    this.pages = [];\n\n    //Generate pages\n    for (let i = 0; i < noOfPages; i++) {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(ind: number) {\n    //Set currentPageIndex\n    if (ind >= 0 && ind < this.pages.length) {\n      this.currentPageIndex = ind;\n    }\n  }\n\n  onNewClick(event: any) {\n    //reset the newForm\n    this.newForm.reset({ taskPriorityID: 0 });\n    setTimeout(() => {\n      //Focus the TaskPriority textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    if (this.newForm.valid) {\n      //Invoke the REST-API call\n      this.taskPrioritiesService\n        .insertTaskPriority(this.newForm.value)\n        .subscribe({\n          next: (response) => {\n            //Add Response to Grid\n            var p: TaskPriority = new TaskPriority();\n            p.taskPriorityID = response.taskPriorityID;\n            p.taskPriorityName = response.taskPriorityName;\n            this.taskPriorities.push(p);\n\n            //Reset the newForm\n            this.newForm.reset();\n            this.newTaskPriorityFormCancel.nativeElement.click();\n            this.calculateNoOfPages();\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n    }\n  }\n\n  onEditClick(event: any, taskPriority: TaskPriority) {\n    //Reset the editForm\n    this.editForm.reset();\n    setTimeout(() => {\n      //Set data into editForm\n      this.editForm.patchValue(taskPriority);\n      this.editIndex = this.taskPriorities.indexOf(taskPriority);\n\n      //Focus the TaskPriority textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick() {\n    if (this.editForm.valid) {\n      //Invoke the REST-API call\n      this.taskPrioritiesService\n        .updateTaskPriority(this.editForm.value)\n        .subscribe({\n          next: (response) => {\n            //Update the response in Grid\n            this.taskPriorities[this.editIndex] = response;\n\n            //Reset the editForm\n            this.editForm.reset();\n            this.editTaskPriorityFormCancel.nativeElement.click();\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n    }\n  }\n\n  onDeleteClick(event: any, taskPriority: TaskPriority) {\n    //Set data into deleteTaskPriority\n    this.deleteTaskPriority.taskPriorityID = taskPriority.taskPriorityID;\n    this.deleteTaskPriority.taskPriorityName = taskPriority.taskPriorityName;\n    this.deleteIndex = this.taskPriorities.indexOf(taskPriority);\n  }\n\n  onDeleteConfirmClick() {\n    //Invoke the REST-API call\n    this.taskPrioritiesService\n      .deleteTaskPriority(this.deleteTaskPriority.taskPriorityID)\n      .subscribe({\n        next: (response) => {\n          //Delete object in Grid\n          this.taskPriorities.splice(this.deleteIndex, 1);\n\n          //Clear deleteCountry\n          this.deleteTaskPriority.taskPriorityID = null;\n          this.deleteTaskPriority.taskPriorityName = null;\n\n          //Recall the calculateNoOfPages\n          this.calculateNoOfPages();\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n  }\n\n  onSearchTextChange(event: any) {\n    this.calculateNoOfPages();\n  }\n}\n", "<h5>\n  Task Priorities\n  <i\n    class=\"fa fa-circle-o-notch fa-spin\"\n    style=\"font-size: 24px\"\n    *ngIf=\"showLoading\"\n  ></i>\n</h5>\n\n<div class=\"row\">\n  <div class=\"col-xl-12\">\n    <div class=\"form-group row\">\n      <div class=\"col-md-12 col-lg-12 col-xl-2\">\n        <button\n          class=\"btn btn-primary\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#newTaskPriorityModal\"\n          (click)=\"onNewClick($event)\"\n        >\n          Create Task Priority\n        </button>\n      </div>\n\n      <label\n        for=\"drpSearchBy\"\n        class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\"\n        >Search by:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <select\n          class=\"form-control\"\n          id=\"drpSearchBy\"\n          name=\"SearchBy\"\n          [(ngModel)]=\"searchBy\"\n        >\n          <option value=\"taskPriorityName\">Task Priority Name</option>\n        </select>\n      </div>\n\n      <label\n        for=\"textSearchText\"\n        class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\"\n        >Search:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"txtSearchText\"\n            name=\"SearchText\"\n            [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextChange($event)\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-9 mx-auto\">\n        <table class=\"table\">\n          <tr class=\"table-dark text-dark\">\n            <th>\n              Task Priority Name\n              <i\n                class=\"fa fa-sort hand-icon\"\n                *ngIf=\"sortBy != 'taskPriorityName'\"\n                (click)=\"sortBy = 'taskPriorityName'; sortOrder = 'ASC'\"\n              ></i>\n\n              <i\n                class=\"fa fa-sort-up hand-icon text-primary\"\n                *ngIf=\"sortBy == 'taskPriorityName' && sortOrder == 'ASC'\"\n                (click)=\"sortOrder = 'DESC'\"\n              ></i>\n\n              <i\n                class=\"fa fa-sort-down hand-icon text-primary\"\n                *ngIf=\"sortBy == 'taskPriorityName' && sortOrder == 'DESC'\"\n                (click)=\"sortOrder = 'ASC'\"\n              ></i>\n            </th>\n\n            <th class=\"text-center\" style=\"width: 200px\">Actions</th>\n          </tr>\n\n          <tr\n            *ngFor=\"\n              let taskPriority of taskPriorities\n                | filter : searchBy : searchText\n                | sort : sortBy : sortOrder\n                | paging : currentPageIndex : pageSize;\n              let i = index\n            \"\n          >\n            <td>{{ taskPriority.taskPriorityName }}</td>\n            <td class=\"text-center\">\n              <button\n                class=\"btn btn-info\"\n                (click)=\"onEditClick($event, taskPriority)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#editTaskPriorityModal\"\n              >\n                Edit</button\n              >&nbsp;\n              <button\n                class=\"btn btn-warning\"\n                (click)=\"onDeleteClick($event, taskPriority)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteModal\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-12\">\n    <ul class=\"pagination justify-content-center mt-1\">\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Prev</a\n        >\n      </li>\n\n      <ng-container *ngIf=\"pages.length <= 10\">\n        <li\n          class=\"page-item\"\n          *ngFor=\"let page of pages\"\n          [ngClass]=\"{ active: page.pageIndex == currentPageIndex }\"\n          (click)=\"onPageIndexClicked(page.pageIndex)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            page.pageIndex + 1\n          }}</a>\n        </li>\n      </ng-container>\n\n      <ng-container *ngIf=\"pages.length > 10\">\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 0 }\"\n          (click)=\"onPageIndexClicked(0)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 1 }\"\n          (click)=\"onPageIndexClicked(1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n        </li>\n\n        <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n          &nbsp;...&nbsp;\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"'active'\"\n          (click)=\"onPageIndexClicked(currentPageIndex)\"\n          *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            currentPageIndex + 1\n          }}</a>\n        </li>\n\n        <li>&nbsp;...&nbsp;</li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 2 }\"\n          (click)=\"onPageIndexClicked(pages.length - 2)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length - 1\n          }}</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 1 }\"\n          (click)=\"onPageIndexClicked(pages.length - 1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length\n          }}</a>\n        </li>\n      </ng-container>\n\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Next</a\n        >\n      </li>\n    </ul>\n  </div>\n</div>\n\n<form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"newTaskPriorityModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Task Priority</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtNewTaskPriorityName\" class=\"col-sm-4 col-form-label\"\n              >Task Priority Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtNewTaskPriorityName\"\n                class=\"form-control\"\n                placeholder=\"Task Priority Name\"\n                name=\"TaskPriorityName\"\n                formControlName=\"taskPriorityName\"\n                maxlength=\"30\"\n                #defaultTextBox_New\n                [ngClass]=\"{\n                  'is-invalid':\n                    newForm.get('taskPriorityName').invalid &&\n                    (newForm.get('taskPriorityName').dirty ||\n                      newForm.get('taskPriorityName').touched ||\n                      newForm.submitted),\n                  'is-valid':\n                    newForm.get('taskPriorityName').valid &&\n                    (newForm.get('taskPriorityName').dirty ||\n                      newForm.get('taskPriorityName').touched ||\n                      newForm.submitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newForm.get('taskPriorityName').invalid &&\n                  (newForm.get('taskPriorityName').dirty ||\n                    newForm.get('taskPriorityName').touched ||\n                    newForm.submitted) &&\n                  newForm.get('taskPriorityName').errors?.required\n                \"\n                >Task Priority Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"newTaskPriorityFormCancel\"\n            #newTaskPriorityFormCancel\n            type=\"button\"\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Task Priority -->\n<form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"editTaskPriorityModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Edit Task Priority</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtEditTaskPriorityName\" class=\"col-sm-4 col-form-label\"\n              >Task Priority Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtEditTaskPriorityName\"\n                class=\"form-control\"\n                placeholder=\"Task Priority Name\"\n                name=\"TaskPriorityName\"\n                formControlName=\"taskPriorityName\"\n                maxlength=\"30\"\n                #defaultTextBox_Edit\n                [ngClass]=\"{\n                  'is-invalid':\n                    editForm.get('taskPriorityName').invalid &&\n                    (editForm.get('taskPriorityName').dirty ||\n                      editForm.get('taskPriorityName').touched ||\n                      editForm.submitted),\n                  'is-valid':\n                    editForm.get('taskPriorityName').valid &&\n                    (editForm.get('taskPriorityName').dirty ||\n                      editForm.get('taskPriorityName').touched ||\n                      editForm.submitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  editForm.get('taskPriorityName').invalid &&\n                  (editForm.get('taskPriorityName').dirty ||\n                    editForm.get('taskPriorityName').touched ||\n                    editForm.submitted) &&\n                  editForm.get('taskPriorityName').errors?.required\n                \"\n                >Task Priority Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"editTaskPriorityFormCancel\"\n            #editTaskPriorityFormCancel\n            type=\"button\"\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">\n            Update\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Delete Task Priority -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Delete Task Priority</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"text-warning\">\n            Are you sure to delete this Task Priority?\n          </div>\n\n          <div class=\"form-group row\">\n            <label\n              for=\"txtDeleteTaskPriorityName\"\n              class=\"col-sm-4 col-form-label\"\n              >Task Priority Name</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtDeleteTaskPriorityName\"\n                class=\"form-control-plain-text\"\n                style=\"width: 300px\"\n                placeholder=\"Task Priority Name\"\n                name=\"TaskPriorityName\"\n                [(ngModel)]=\"deleteTaskPriority.taskPriorityName\"\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-bs-dismiss=\"modal\" type=\"button\">\n            Cancel\n          </button>\n          <button\n            class=\"btn btn-danger\"\n            data-bs-dismiss=\"modal\"\n            (click)=\"onDeleteConfirmClick()\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n", "import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TaskStatus } from '../../../models/task-status.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TaskStatusesService } from '../../../services/task-statuses.service';\nimport { FilterPipe } from '../../../pipes/filter.pipe';\n\n@Component({\n  selector: 'app-task-status',\n  templateUrl: './task-status.component.html',\n  styleUrl: './task-status.component.scss',\n})\nexport class TaskStatusComponent implements OnInit {\n  //Objects for Holding Model Data\n  taskStatuses: TaskStatus[] = [];\n  showLoading: boolean = true;\n\n  //Objects for Delete\n  deleteTaskStatus: TaskStatus = new TaskStatus();\n  editIndex: number = 0;\n  deleteIndex: number = 0;\n\n  //Properties for Searching\n  searchBy: string = 'taskStatusName';\n  searchText: string = '';\n\n  //Properties for Paging\n  currentPageIndex: number = 0;\n  pages: any[] = [];\n  pageSize: number = 7;\n\n  //Properties for Sorting\n  sortBy: string = 'taskStatusName';\n  sortOrder: string = 'ASC';\n\n  //Reactive Forms\n  newForm!: FormGroup;\n  editForm!: FormGroup;\n\n  newFormSubmitted: boolean = false;\n  editFormSubmitted: boolean = false;\n\n  //Autofocus TextBoxes\n  @ViewChild('defaultTextBox_New') defaultTextBox_New!: ElementRef;\n  @ViewChild('defaultTextBox_Edit') defaultTextBox_Edit!: ElementRef;\n  @ViewChild('newTaskStatusFormCancel') newTaskStatusFormCancel!: ElementRef;\n  @ViewChild('editTaskStatusFormCancel') editTaskStatusFormCancel!: ElementRef;\n\n  //Constructor\n  constructor(\n    private taskStatusesService: TaskStatusesService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    //Get data from database\n    this.taskStatusesService\n      .getTaskStatuses()\n      .subscribe((response: TaskStatus[]) => {\n        this.taskStatuses = response;\n        this.showLoading = false;\n        this.calculateNoOfPages();\n      });\n\n    //Create newForm\n    this.newForm = this.formBuilder.group({\n      taskStatusID: this.formBuilder.control(null),\n      taskStatusName: this.formBuilder.control(null, [Validators.required]),\n    });\n\n    //Create editForm\n    this.editForm = this.formBuilder.group({\n      taskStatusID: this.formBuilder.control(null),\n      taskStatusName: this.formBuilder.control(null, [Validators.required]),\n    });\n  }\n\n  calculateNoOfPages() {\n    //Get no. of Pages\n    let filterPipe = new FilterPipe();\n    var noOfPages = Math.ceil(\n      filterPipe.transform(this.taskStatuses, this.searchBy, this.searchText)\n        .length / this.pageSize\n    );\n    this.pages = [];\n\n    //Generate pages\n    for (let i = 0; i < noOfPages; i++) {\n      this.pages.push({ pageIndex: i });\n    }\n\n    this.currentPageIndex = 0;\n  }\n\n  onPageIndexClicked(ind: number) {\n    //Set currentPageIndex\n    if (ind >= 0 && ind < this.pages.length) {\n      this.currentPageIndex = ind;\n    }\n  }\n\n  onNewClick(event: any) {\n    //reset the newForm\n    this.newForm.reset({ taskStatusID: 0 });\n    setTimeout(() => {\n      //Focus the TaskStatus textbox in newForm\n      this.defaultTextBox_New.nativeElement.focus();\n    }, 100);\n  }\n\n  onSaveClick() {\n    this.newFormSubmitted = true;\n    if (this.newForm.valid) {\n      //Invoke the REST-API call\n      this.taskStatusesService.insertTaskStatus(this.newForm.value).subscribe(\n        (response) => {\n          //Add Response to Grid\n          var p: TaskStatus = new TaskStatus();\n          p.taskStatusID = response.taskStatusID;\n          p.taskStatusName = response.taskStatusName;\n          this.taskStatuses.push(p);\n\n          //Reset the newForm\n          this.newForm.reset();\n          this.newTaskStatusFormCancel.nativeElement.click();\n          this.calculateNoOfPages();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  onEditClick(event: any, taskStatus: TaskStatus) {\n    //Reset the editForm\n    this.editForm.reset();\n    setTimeout(() => {\n      this.editForm.patchValue(taskStatus);\n      this.editIndex = this.taskStatuses.indexOf(taskStatus);\n\n      //Focus the TaskStatus textbox in editForm\n      this.defaultTextBox_Edit.nativeElement.focus();\n    }, 100);\n  }\n\n  onUpdateClick() {\n    this.editFormSubmitted = true;\n    if (this.editForm.valid) {\n      //Invoke the REST-API call\n      this.taskStatusesService.updateTaskStatus(this.editForm.value).subscribe(\n        (response: TaskStatus) => {\n          //Update the response in Grid\n          this.taskStatuses[this.editIndex] = response;\n\n          //Reset the editForm\n          this.editForm.reset();\n          this.editTaskStatusFormCancel.nativeElement.click();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  onDeleteClick(event: any, taskStatus: TaskStatus) {\n    //Set data into deleteTaskStatus\n    this.deleteTaskStatus.taskStatusID = taskStatus.taskStatusID;\n    this.deleteTaskStatus.taskStatusName = taskStatus.taskStatusName;\n    this.deleteIndex = this.taskStatuses.indexOf(taskStatus);\n  }\n\n  onDeleteConfirmClick() {\n    //Invoke the REST-API call\n    this.taskStatusesService\n      .deleteTaskStatus(this.deleteTaskStatus.taskStatusID)\n      .subscribe({\n        next: (response) => {\n          //Delete object in Grid\n          this.taskStatuses.splice(this.deleteIndex, 1);\n\n          //Clear deleteCountry\n          this.deleteTaskStatus = new TaskStatus();\n\n          //Recall the calculateNoOfPages\n          this.calculateNoOfPages();\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n  }\n\n  onSearchTextChange(event: any) {\n    this.calculateNoOfPages();\n  }\n}\n", "<h5>\n  Task Statuses\n  <i\n    class=\"fa fa-circle-o-notch fa-spin\"\n    style=\"font-size: 24px\"\n    *ngIf=\"showLoading\"\n  ></i>\n</h5>\n\n<div class=\"row\">\n  <div class=\"col-xl-12\">\n    <div class=\"form-group row\">\n      <div class=\"col-md-12 col-lg-12 col-xl-2\">\n        <button\n          class=\"btn btn-primary\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#newTaskStatusModal\"\n          (click)=\"onNewClick($event)\"\n        >\n          Create Task Status\n        </button>\n      </div>\n\n      <label\n        for=\"drpSearchBy\"\n        class=\"col-form-label col-md-6 col-lg-2 offset-xl-1 col-xl-2 text-right\"\n        >Search by:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <select\n          class=\"form-control\"\n          id=\"drpSearchBy\"\n          name=\"SearchBy\"\n          [(ngModel)]=\"searchBy\"\n        >\n          <option value=\"taskStatusName\">Task Status Name</option>\n        </select>\n      </div>\n\n      <label\n        for=\"textSearchText\"\n        class=\"col-form-label col-md-6 col-lg-2 col-xl-1 text-right\"\n        >Search:</label\n      >\n\n      <div class=\"col-md-6 col-lg-4 col-xl-3\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"txtSearchText\"\n            name=\"SearchText\"\n            [(ngModel)]=\"searchText\"\n            (keyup)=\"onSearchTextChange($event)\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-xl-12\">\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-9 mx-auto\">\n        <table class=\"table\">\n          <tr class=\"table-dark text-dark\">\n            <th>\n              Task Status Name\n              <i\n                class=\"fa fa-sort hand-icon\"\n                *ngIf=\"sortBy != 'taskStatusName'\"\n                (click)=\"sortBy = 'taskStatusName'; sortOrder = 'ASC'\"\n              ></i>\n\n              <i\n                class=\"fa fa-sort-up hand-icon text-primary\"\n                *ngIf=\"sortBy == 'taskStatusName' && sortOrder == 'ASC'\"\n                (click)=\"sortOrder = 'DESC'\"\n              ></i>\n\n              <i\n                class=\"fa fa-sort-down hand-icon text-primary\"\n                *ngIf=\"sortBy == 'taskStatusName' && sortOrder == 'DESC'\"\n                (click)=\"sortOrder = 'ASC'\"\n              ></i>\n            </th>\n\n            <th class=\"text-center\" style=\"width: 200px\">Actions</th>\n          </tr>\n\n          <tr\n            *ngFor=\"\n              let taskStatus of taskStatuses\n                | filter : searchBy : searchText\n                | sort : sortBy : sortOrder\n                | paging : currentPageIndex : pageSize;\n              let i = index\n            \"\n          >\n            <td>{{ taskStatus.taskStatusName }}</td>\n            <td class=\"text-center\">\n              <button\n                class=\"btn btn-info\"\n                (click)=\"onEditClick($event, taskStatus)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#editTaskStatusModal\"\n              >\n                Edit</button\n              >&nbsp;\n              <button\n                class=\"btn btn-warning\"\n                (click)=\"onDeleteClick($event, taskStatus)\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteModal\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-12\">\n    <ul class=\"pagination justify-content-center mt-1\">\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex - 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Prev</a\n        >\n      </li>\n\n      <ng-container *ngIf=\"pages.length <= 10\">\n        <li\n          class=\"page-item\"\n          *ngFor=\"let page of pages\"\n          [ngClass]=\"{ active: page.pageIndex == currentPageIndex }\"\n          (click)=\"onPageIndexClicked(page.pageIndex)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            page.pageIndex + 1\n          }}</a>\n        </li>\n      </ng-container>\n\n      <ng-container *ngIf=\"pages.length > 10\">\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 0 }\"\n          (click)=\"onPageIndexClicked(0)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">1</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == 1 }\"\n          (click)=\"onPageIndexClicked(1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">2</a>\n        </li>\n\n        <li *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\">\n          &nbsp;...&nbsp;\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"'active'\"\n          (click)=\"onPageIndexClicked(currentPageIndex)\"\n          *ngIf=\"currentPageIndex > 1 && currentPageIndex < pages.length - 2\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            currentPageIndex + 1\n          }}</a>\n        </li>\n\n        <li>&nbsp;...&nbsp;</li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 2 }\"\n          (click)=\"onPageIndexClicked(pages.length - 2)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length - 1\n          }}</a>\n        </li>\n\n        <li\n          class=\"page-item\"\n          [ngClass]=\"{ active: currentPageIndex == pages.length - 1 }\"\n          (click)=\"onPageIndexClicked(pages.length - 1)\"\n        >\n          <a class=\"page-link\" href=\"#\" onclick=\"return false\">{{\n            pages.length\n          }}</a>\n        </li>\n      </ng-container>\n\n      <li class=\"page-item\" (click)=\"onPageIndexClicked(currentPageIndex + 1)\">\n        <a\n          class=\"page-link bg-secondary text-white\"\n          href=\"#\"\n          onclick=\"return false\"\n          >Next</a\n        >\n      </li>\n    </ul>\n  </div>\n</div>\n\n<form novalidate=\"novalidate\" [formGroup]=\"newForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"newTaskStatusModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">New Task Status</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtNewTaskStatusName\" class=\"col-sm-4 col-form-label\"\n              >Task Status Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtNewTaskStatusName\"\n                class=\"form-control\"\n                placeholder=\"Task Status Name\"\n                name=\"TaskStatusName\"\n                formControlName=\"taskStatusName\"\n                maxlength=\"30\"\n                #defaultTextBox_New\n                [ngClass]=\"{\n                  'is-invalid':\n                    newForm.get('taskStatusName')?.invalid &&\n                    (newForm.get('taskStatusName')?.dirty ||\n                      newForm.get('taskStatusName')?.touched ||\n                      newFormSubmitted),\n                  'is-valid':\n                    newForm.get('taskStatusName')?.valid &&\n                    (newForm.get('taskStatusName')?.dirty ||\n                      newForm.get('taskStatusName')?.touched ||\n                      newFormSubmitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  newForm.get('taskStatusName')?.invalid &&\n                  (newForm.get('taskStatusName')?.dirty ||\n                    newForm.get('taskStatusName')?.touched ||\n                    newFormSubmitted) &&\n                  (newForm.get('taskStatusName')?.errors)!['required']\n                \"\n                >Task Status Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"newTaskStatusFormCancel\"\n            #newTaskStatusFormCancel\n            type=\"button\"\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onSaveClick()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Edit Task Status -->\n<form novalidate=\"novalidate\" [formGroup]=\"editForm\">\n  <div class=\"modal\" role=\"dialog\" id=\"editTaskStatusModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Edit Task Status</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"form-group row\">\n            <label for=\"txtEditTaskStatusName\" class=\"col-sm-4 col-form-label\"\n              >Task Status Name *</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtEditTaskStatusName\"\n                class=\"form-control\"\n                placeholder=\"Task Status Name\"\n                name=\"TaskStatusName\"\n                formControlName=\"taskStatusName\"\n                maxlength=\"30\"\n                #defaultTextBox_Edit\n                [ngClass]=\"{\n                  'is-invalid':\n                    editForm.get('taskStatusName')?.invalid &&\n                    (editForm.get('taskStatusName')?.dirty ||\n                      editForm.get('taskStatusName')?.touched ||\n                      editFormSubmitted),\n                  'is-valid':\n                    editForm.get('taskStatusName')?.valid &&\n                    (editForm.get('taskStatusName')?.dirty ||\n                      editForm.get('taskStatusName')?.touched ||\n                      editFormSubmitted)\n                }\"\n              />\n\n              <span\n                class=\"text-danger\"\n                *ngIf=\"\n                  editForm.get('taskStatusName')?.invalid &&\n                  (editForm.get('taskStatusName')?.dirty ||\n                    editForm.get('taskStatusName')?.touched ||\n                    editFormSubmitted) &&\n                  (editForm.get('taskStatusName')?.errors)!['required']\n                \"\n                >Task Status Name can't be blank</span\n              >\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            class=\"btn btn-warning\"\n            data-bs-dismiss=\"modal\"\n            id=\"editTaskStatusFormCancel\"\n            #editTaskStatusFormCancel\n            type=\"button\"\n          >\n            Cancel\n          </button>\n          <button class=\"btn btn-success\" (click)=\"onUpdateClick()\">\n            Update\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- Delete Task Status -->\n<form>\n  <div class=\"modal\" role=\"dialog\" id=\"deleteModal\">\n    <div class=\"modal-dialog modal-md\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header bg-primary text-white\">\n          <div class=\"modal-title\">Delete Task Status</div>\n          <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\">\n            <span>&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"text-warning\">\n            Are you sure to delete this Task Status?\n          </div>\n\n          <div class=\"form-group row\">\n            <label for=\"txtDeleteTaskStatusName\" class=\"col-sm-4 col-form-label\"\n              >Task Status Name</label\n            >\n            <div class=\"col-sm-8\">\n              <input\n                type=\"text\"\n                id=\"txtDeleteTaskStatusName\"\n                class=\"form-control-plain-text\"\n                style=\"width: 300px\"\n                placeholder=\"Task Status Name\"\n                name=\"TaskStatusName\"\n                [(ngModel)]=\"deleteTaskStatus.taskStatusName\"\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button class=\"btn btn-warning\" data-bs-dismiss=\"modal\" type=\"button\">\n            Cancel\n          </button>\n          <button\n            class=\"btn btn-danger\"\n            data-bs-dismiss=\"modal\"\n            (click)=\"onDeleteConfirmClick()\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n", "import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { ComponentLoaderDirective } from '../../../directives/component-loader.directive';\nimport { CountriesComponent } from '../countries/countries.component';\nimport { ClientLocationsComponent } from '../client-locations/client-locations.component';\nimport { TaskPrioritiesComponent } from '../task-priorities/task-priorities.component';\nimport { TaskStatusComponent } from '../task-status/task-status.component';\n\n@Component({\n  selector: 'app-masters',\n  templateUrl: './masters.component.html',\n  styleUrl: './masters.component.scss',\n})\nexport class MastersComponent implements OnInit {\n  masterMenuItems = [\n    {\n      itemName: 'Countries',\n      displayName: 'Countries',\n      component: CountriesComponent,\n    },\n    {\n      itemName: 'ClientLocations',\n      displayName: 'Client Locations',\n      component: ClientLocationsComponent,\n    },\n    {\n      itemName: 'TaskPriorities',\n      displayName: 'Task Priorities',\n      component: TaskPrioritiesComponent,\n    },\n    {\n      itemName: 'TaskStatus',\n      displayName: 'Task Status',\n      component: TaskStatusComponent,\n    },\n  ];\n  activeItem!: string;\n  tabs: any = [];\n  @ViewChildren(ComponentLoaderDirective) componentLoaders:\n    | QueryList<ComponentLoaderDirective>\n    | any = null;\n  constructor() {}\n  ngOnInit(): void {}\n\n  menuItemClick(clickedMasterMenuItem: any) {\n    this.activeItem = clickedMasterMenuItem.itemName;\n\n    let matchingTabs = this.tabs.filter((tab: any) => {\n      return tab.itemName == clickedMasterMenuItem.itemName;\n    });\n\n    if (matchingTabs.length == 0) {\n      this.tabs.push({\n        itemName: clickedMasterMenuItem.itemName,\n        displayName: clickedMasterMenuItem.displayName,\n      });\n      setTimeout(() => {\n        const componentLoadersArray = this.componentLoaders.toArray();\n        const viewContainerRef =\n          componentLoadersArray[this.tabs.length - 1].viewContainerRef;\n\n        // Clear the view container before creating a new component\n        viewContainerRef.clear();\n\n        // Use DynamicChildLoaderDirective directly to create the component\n        var componentRef = viewContainerRef.createComponent(\n          clickedMasterMenuItem.component\n        );\n\n        this.tabs[this.tabs.length - 1].viewContainerRef = viewContainerRef;\n\n        if (clickedMasterMenuItem.component.name == '_CountriesComponent') {\n          var componentInstance = componentRef.instance as CountriesComponent;\n          //componentInstance.message = 'Hello,Welcome to Countries.';\n        }\n      }, 100);\n    }\n  }\n  onCloseClick(clickedTab: any) {\n    clickedTab.viewContainerRef.remove();\n    this.tabs.splice(this.tabs.indexOf(clickedTab), 1);\n    if (this.tabs.length > 0) {\n      this.activeItem = this.tabs[0].itemName;\n    }\n  }\n}\n", "<h5>Masters</h5>\n<div class=\"row\">\n  <div class=\"col-md-2\">\n    <div class=\"list-group\">\n      <a\n        href=\"#\"\n        class=\"list-group-item list-group-item-action\"\n        onclick=\"return false\"\n        *ngFor=\"let masterMenuItem of masterMenuItems\"\n        [ngClass]=\"{ active: activeItem == masterMenuItem.itemName }\"\n        (click)=\"menuItemClick(masterMenuItem)\"\n        >{{ masterMenuItem.displayName }}</a\n      >\n    </div>\n  </div>\n  <div class=\"col-md-8\">\n    <ul class=\"nav nav-tabs\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a\n          class=\"nav-link\"\n          data-bs-toggle=\"tab\"\n          role=\"tab\"\n          [href]=\"'#' + tab.itemName\"\n          [ngClass]=\"{ active: activeItem == tab.itemName }\"\n          (click)=\"activeItem = tab.itemName\"\n          >{{ tab.displayName }}\n\n          <span class=\"fa fa-window-close\" (click)=\"onCloseClick(tab)\"></span>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <div\n        class=\"tab-pane fade-show\"\n        role=\"tabpanel\"\n        *ngFor=\"let tab of tabs\"\n        [id]=\"tab.itemName\"\n        [ngClass]=\"{ active: activeItem == tab.itemName }\"\n      >\n        <div class=\"pl-md-3 pr-md-3 mx-auto\">\n          <ng-template appComponentLoader></ng-template>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanActivateGuardService } from '../../guards/can-activate-guard.service';\nimport { DashboardComponent } from '../components/dashboard/dashboard.component';\nimport { ProjectDetailsComponent } from '../components/project-details/project-details.component';\nimport { ProjectsComponent } from '../components/projects/projects.component';\nimport { MastersComponent } from '../components/masters/masters.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [CanActivateGuardService],\n    data: { expectedRole: 'Admin' },\n    children: [\n      {\n        path: 'dashboard',\n        component: DashboardComponent,\n      },\n      {\n        path: 'projects',\n        component: ProjectsComponent,\n      },\n      {\n        path: 'projects/view/:projectid',\n        component: ProjectDetailsComponent,\n      },\n      {\n        path: 'masters',\n        component: MastersComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n", "import { NgModule } from '@angular/core';\r\nimport { DashboardService } from '../services/dashboard.service';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AdminRoutingModule } from './admin-routing/admin-routing.module';\r\nimport { CheckBoxPrinterComponent } from './components/check-box-printer/check-box-printer.component';\r\nimport { ClientLocationsComponent } from './components/client-locations/client-locations.component';\r\nimport { CountriesComponent } from './components/countries/countries.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { MastersComponent } from './components/masters/masters.component';\r\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\r\nimport { ProjectDetailsComponent } from './components/project-details/project-details.component';\r\nimport { ProjectComponent } from './components/project/project.component';\r\nimport { ProjectsComponent } from './components/projects/projects.component';\r\nimport { TaskPrioritiesComponent } from './components/task-priorities/task-priorities.component';\r\nimport { TaskStatusComponent } from './components/task-status/task-status.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    MyProfileComponent,\r\n    ProjectsComponent,\r\n    ProjectComponent,\r\n    CheckBoxPrinterComponent,\r\n    ProjectDetailsComponent,\r\n    CountriesComponent,\r\n    ClientLocationsComponent,\r\n    TaskPrioritiesComponent,\r\n    TaskStatusComponent,\r\n    MastersComponent,\r\n  ],\r\n  imports: [SharedModule, AdminRoutingModule],\r\n  exports: [\r\n    DashboardComponent,\r\n    MyProfileComponent,\r\n    ProjectsComponent,\r\n    ProjectDetailsComponent,\r\n  ],\r\n  providers: [DashboardService],\r\n})\r\nexport class AdminModule {}\r\n"],
  "mappings": "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",
  "names": ["DashboardService", "getTeamMembersSummary", "TeamMembersSummary", "Region", "TeamMembersCount", "TemporarilyUnavailableMembers", "factory", "\u0275fac", "i0", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "client_r5", "\u0275\u0275listener", "DashboardComponent_a_54_Template_a_click_0_listener", "$event", "\u0275\u0275restoreView", "_r8", "ctx_r7", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onProjectChange", "\u0275\u0275textInterpolate", "project_r6", "year_r9", "\u0275\u0275template", "DashboardComponent_a_60_span_2_Template", "DashboardComponent_a_60_span_3_Template", "DashboardComponent_a_60_span_4_Template", "\u0275\u0275property", "team_r16", "Region", "TeamMembersCount", "TemporarilyUnavailableMembers", "\u0275\u0275element", "\u0275\u0275textInterpolate2", "member_r25", "ID", "Name", "Status", "DashboardComponent_div_101_ng_template_8_div_0_Template", "teamgroup_r17", "Members", "member_r28", "\u0275\u0275styleProp", "DashboardComponent_div_101_ng_template_10_tr_10_Template", "DashboardComponent_div_101_div_7_Template", "DashboardComponent_div_101_ng_template_8_Template", "\u0275\u0275templateRefExtractor", "DashboardComponent_div_101_ng_template_10_Template", "\u0275\u0275attribute", "i_r18", "_r21", "_r23", "DashboardComponent", "constructor", "dashboardService", "Designation", "Username", "NoOfTeamMembers", "TotalCostOfAllProjects", "PendingTasks", "UpComingProjects", "ProjectCost", "CurrentExpenditure", "AvailableFunds", "Clients", "Projects", "Years", "TeamMembersSummary", "TeamMembers", "ToDate", "Date", "ngOnInit", "i", "push", "getTeamMembersSummary", "target", "innerHTML", "\u0275\u0275directiveInject", "DashboardService", "selectors", "decls", "vars", "consts", "template", "DashboardComponent_Template", "rf", "ctx", "DashboardComponent_li_44_Template", "DashboardComponent_a_54_Template", "DashboardComponent_a_60_Template", "DashboardComponent_tr_94_Template", "DashboardComponent_div_101_Template", "\u0275\u0275pipeBind1", "\u0275\u0275pipeBind2", "ProjectDetailsComponent", "constructor", "activatedRoute", "projectsService", "project", "Project", "ngOnInit", "routeParamsSubscription", "params", "subscribe", "pid", "getProjectByProjectID", "next", "proj", "ngOnDestroy", "unsubscribe", "\u0275\u0275directiveInject", "ActivatedRoute", "ProjectsService", "selectors", "decls", "vars", "consts", "template", "ProjectDetailsComponent_Template", "rf", "ctx", "i0", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "projectID", "\u0275\u0275textInterpolate", "projectName", "dateOfStart", "teamSize", "clientLocation", "clientLocationName", "status", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c0", "ClientLocationService", "constructor", "httpClient", "getClientLocations", "get", "responseType", "getClientLocationtByClientLocationID", "ClientLocationID", "insertClientLocation", "newClientLocation", "post", "updateClientLocation", "existingClientLocation", "put", "deleteClientLocation", "delete", "\u0275\u0275inject", "HttpClient", "factory", "\u0275fac", "providedIn", "ProjectComponent", "constructor", "projectsService", "editClick", "EventEmitter", "deleteClick", "hideDetails", "ngOnChanges", "changes", "ngOnInit", "MySubscription", "MySubject", "subscribe", "hide", "onEditClick", "event", "i", "emit", "onDeleteClick", "ngOnDestroy", "unsubscribe", "isAllCheckedChange", "b", "selectionBox", "check", "unCheck", "\u0275\u0275directiveInject", "ProjectsService", "selectors", "contentQueries", "ProjectComponent_ContentQueries", "rf", "ctx", "dirIndex", "i0", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275projection", "\u0275\u0275listener", "ProjectComponent_Template_button_click_33_listener", "$event", "ProjectComponent_Template_button_click_35_listener", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "project", "projectID", "\u0275\u0275textInterpolate", "projectName", "\u0275\u0275property", "dateOfStart", "teamSize", "clientLocation", "clientLocationName", "status", "\u0275\u0275pureFunction1", "_c1", "CheckBoxPrinterComponent", "constructor", "isChecked", "ngOnInit", "check", "unCheck", "selectors", "decls", "vars", "consts", "template", "CheckBoxPrinterComponent_Template", "rf", "ctx", "i0", "\u0275\u0275elementStart", "\u0275\u0275listener", "CheckBoxPrinterComponent_Template_input_ngModelChange_1_listener", "$event", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "i0", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "ProjectsComponent_div_34_Template_app_project_editClick_1_listener", "$event", "restoredCtx", "\u0275\u0275restoreView", "_r44", "project_r39", "$implicit", "ctx_r43", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onEditClick", "projectID", "ProjectsComponent_div_34_Template_app_project_deleteClick_1_listener", "ctx_r45", "onDeleteClick", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ProjectsComponent_li_40_Template_li_click_0_listener", "_r48", "page_r46", "ctx_r47", "onPageIndexClicked", "pageIndex", "\u0275\u0275text", "\u0275\u0275pureFunction1", "_c5", "ctx_r2", "currentPageIndex", "\u0275\u0275textInterpolate", "clientLocation_r49", "clientLocationID", "\u0275\u0275textInterpolate1", "clientLocationName", "clientLocation_r50", "ProjectsComponent", "constructor", "projectsService", "clientLocationService", "projects", "showLoading", "newProject", "Project", "editProject", "editIndex", "deleteProject", "deleteIndex", "pipe", "DatePipe", "searchBy", "searchText", "pages", "pageSize", "isAllChecked", "ngOnInit", "getAllProjects", "subscribe", "next", "calculateNoOfPages", "clientLocations", "getClientLocations", "isAllCheckedChange", "event", "proj", "projs", "toArray", "i", "length", "filterPipe", "FilterPipe", "resultProjects", "transform", "noOfPages", "Math", "ceil", "push", "onSaveClick", "newForm", "valid", "clientLocation", "active", "insertProject", "response", "p", "projectName", "dateOfStart", "teamSize", "status", "newFormCancel", "nativeElement", "click", "editForm", "resetForm", "index", "findIndex", "project", "setTimeout", "toString", "onUpdateClick", "updateProject", "editFormCancel", "onDeleteConfirmClick", "splice", "onSearchClick", "onSearchTextKeyup", "onNewClick", "onHideShowDetails", "toggleDetails", "\u0275\u0275directiveInject", "ProjectsService", "ClientLocationService", "selectors", "viewQuery", "ProjectsComponent_Query", "rf", "ctx", "\u0275\u0275template", "ProjectsComponent_i_2_Template", "ProjectsComponent_Template_button_click_7_listener", "ProjectsComponent_Template_button_click_9_listener", "ProjectsComponent_Template_input_ngModelChange_12_listener", "ProjectsComponent_Template_input_change_12_listener", "ProjectsComponent_Template_select_ngModelChange_18_listener", "ProjectsComponent_Template_input_ngModelChange_31_listener", "ProjectsComponent_Template_input_keyup_31_listener", "ProjectsComponent_div_34_Template", "ProjectsComponent_li_40_Template", "ProjectsComponent_Template_input_ngModelChange_57_listener", "ProjectsComponent_span_59_Template", "ProjectsComponent_span_60_Template", "ProjectsComponent_span_61_Template", "ProjectsComponent_Template_input_ngModelChange_66_listener", "ProjectsComponent_span_68_Template", "ProjectsComponent_Template_input_ngModelChange_73_listener", "ProjectsComponent_span_75_Template", "ProjectsComponent_span_76_Template", "ProjectsComponent_Template_input_ngModelChange_81_listener", "ProjectsComponent_Template_input_ngModelChange_89_listener", "ProjectsComponent_Template_input_ngModelChange_94_listener", "ProjectsComponent_span_98_Template", "ProjectsComponent_Template_select_ngModelChange_103_listener", "ProjectsComponent_option_107_Template", "ProjectsComponent_span_109_Template", "ProjectsComponent_span_110_Template", "ProjectsComponent_Template_button_click_115_listener", "ProjectsComponent_Template_input_ngModelChange_133_listener", "ProjectsComponent_Template_input_ngModelChange_138_listener", "ProjectsComponent_span_140_Template", "ProjectsComponent_span_141_Template", "ProjectsComponent_span_142_Template", "ProjectsComponent_Template_input_ngModelChange_147_listener", "ProjectsComponent_span_149_Template", "ProjectsComponent_Template_input_ngModelChange_154_listener", "ProjectsComponent_span_156_Template", "ProjectsComponent_span_157_Template", "ProjectsComponent_Template_input_ngModelChange_162_listener", "ProjectsComponent_Template_input_ngModelChange_170_listener", "ProjectsComponent_Template_input_ngModelChange_175_listener", "ProjectsComponent_span_179_Template", "ProjectsComponent_Template_select_ngModelChange_184_listener", "ProjectsComponent_option_188_Template", "ProjectsComponent_span_190_Template", "ProjectsComponent_span_191_Template", "ProjectsComponent_Template_button_click_196_listener", "ProjectsComponent_Template_input_ngModelChange_215_listener", "ProjectsComponent_Template_input_ngModelChange_220_listener", "ProjectsComponent_Template_button_click_224_listener", "\u0275\u0275pipeBind3", "\u0275\u0275pureFunction2", "_c6", "_r4", "invalid", "dirty", "touched", "_r3", "submitted", "errors", "_r8", "_r10", "_r13", "_r16", "\u0275\u0275pipeBind1", "_r22", "_r21", "_r26", "_r28", "_r31", "_r34", "Country", "constructor", "countryID", "countryName", "i0", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "CountriesComponent_i_27_Template_i_click_0_listener", "\u0275\u0275restoreView", "_r14", "ctx_r13", "\u0275\u0275nextContext", "sortBy", "\u0275\u0275resetView", "sortOrder", "\u0275\u0275elementEnd", "CountriesComponent_i_28_Template_i_click_0_listener", "_r16", "ctx_r15", "CountriesComponent_i_29_Template_i_click_0_listener", "_r18", "ctx_r17", "\u0275\u0275text", "CountriesComponent_tr_32_Template_button_click_4_listener", "$event", "restoredCtx", "_r22", "country_r19", "$implicit", "ctx_r21", "onEditClick", "CountriesComponent_tr_32_Template_button_click_7_listener", "ctx_r23", "onDeleteClick", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "countryName", "CountriesComponent_ng_container_41_li_1_Template_li_click_0_listener", "_r27", "page_r25", "ctx_r26", "onPageIndexClicked", "pageIndex", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c4", "ctx_r24", "currentPageIndex", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "CountriesComponent_ng_container_41_li_1_Template", "\u0275\u0275elementContainerEnd", "ctx_r5", "pages", "CountriesComponent_ng_container_42_li_8_Template_li_click_0_listener", "_r31", "ctx_r30", "ctx_r29", "CountriesComponent_ng_container_42_Template_li_click_1_listener", "_r33", "ctx_r32", "CountriesComponent_ng_container_42_Template_li_click_4_listener", "ctx_r34", "CountriesComponent_ng_container_42_li_7_Template", "CountriesComponent_ng_container_42_li_8_Template", "CountriesComponent_ng_container_42_Template_li_click_11_listener", "ctx_r35", "length", "CountriesComponent_ng_container_42_Template_li_click_14_listener", "ctx_r36", "ctx_r6", "CountriesComponent", "constructor", "countriesService", "formBuilder", "countries", "showingLoading", "newformSubmitted", "editformSubmitted", "deleteCountry", "Country", "searchBy", "searchText", "pageSize", "ngOnInit", "getCountries", "subscribe", "next", "response", "calculateNoOfPages", "newForm", "group", "countryID", "control", "Validators", "required", "editForm", "filterPipe", "FilterPipe", "resultProjects", "transform", "noOfPages", "Math", "ceil", "i", "push", "onNewClick", "event", "reset", "setTimeout", "defaultTextBox_New", "nativeElement", "focus", "onSaveClick", "valid", "insertCountry", "value", "p", "newFormCancel", "click", "error", "err", "console", "log", "country", "patchValue", "editIndex", "indexOf", "defaultTextBox_Edit", "onUpdateClick", "updateCountry", "editFormCancel", "deleteIndex", "onDeleteConfirmClick", "splice", "onSearchTextChange", "\u0275\u0275directiveInject", "CountriesService", "FormBuilder", "selectors", "viewQuery", "CountriesComponent_Query", "rf", "ctx", "CountriesComponent_i_2_Template", "CountriesComponent_Template_button_click_7_listener", "CountriesComponent_Template_select_ngModelChange_12_listener", "CountriesComponent_Template_input_ngModelChange_19_listener", "CountriesComponent_Template_input_keyup_19_listener", "CountriesComponent_i_27_Template", "CountriesComponent_i_28_Template", "CountriesComponent_i_29_Template", "CountriesComponent_tr_32_Template", "CountriesComponent_Template_li_click_38_listener", "CountriesComponent_ng_container_41_Template", "CountriesComponent_ng_container_42_Template", "CountriesComponent_Template_li_click_43_listener", "CountriesComponent_span_63_Template", "CountriesComponent_Template_button_click_68_listener", "CountriesComponent_span_87_Template", "CountriesComponent_Template_button_click_92_listener", "CountriesComponent_Template_input_ngModelChange_111_listener", "CountriesComponent_Template_button_click_115_listener", "\u0275\u0275pipeBind3", "\u0275\u0275pureFunction2", "_c5", "tmp_10_0", "get", "invalid", "dirty", "touched", "tmp_11_0", "errors", "tmp_13_0", "tmp_14_0", "i0", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "ClientLocationsComponent_i_27_Template_i_click_0_listener", "\u0275\u0275restoreView", "_r14", "ctx_r13", "\u0275\u0275nextContext", "sortBy", "\u0275\u0275resetView", "sortOrder", "\u0275\u0275elementEnd", "ClientLocationsComponent_i_28_Template_i_click_0_listener", "_r16", "ctx_r15", "ClientLocationsComponent_i_29_Template_i_click_0_listener", "_r18", "ctx_r17", "\u0275\u0275text", "ClientLocationsComponent_tr_32_Template_button_click_4_listener", "$event", "restoredCtx", "_r22", "clientLocation_r19", "$implicit", "ctx_r21", "onEditClick", "ClientLocationsComponent_tr_32_Template_button_click_7_listener", "ctx_r23", "onDeleteClick", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "clientLocationName", "ClientLocationsComponent_ng_container_41_li_1_Template_li_click_0_listener", "_r27", "page_r25", "ctx_r26", "onPageIndexClicked", "pageIndex", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c4", "ctx_r24", "currentPageIndex", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "ClientLocationsComponent_ng_container_41_li_1_Template", "\u0275\u0275elementContainerEnd", "ctx_r5", "pages", "ClientLocationsComponent_ng_container_42_li_8_Template_li_click_0_listener", "_r31", "ctx_r30", "ctx_r29", "ClientLocationsComponent_ng_container_42_Template_li_click_1_listener", "_r33", "ctx_r32", "ClientLocationsComponent_ng_container_42_Template_li_click_4_listener", "ctx_r34", "ClientLocationsComponent_ng_container_42_li_7_Template", "ClientLocationsComponent_ng_container_42_li_8_Template", "ClientLocationsComponent_ng_container_42_Template_li_click_11_listener", "ctx_r35", "length", "ClientLocationsComponent_ng_container_42_Template_li_click_14_listener", "ctx_r36", "ctx_r6", "ClientLocationsComponent", "constructor", "clientLocationsService", "formBuilder", "clientLocations", "showLoading", "deleteClientLocation", "ClientLocation", "searchBy", "searchText", "pageSize", "newForm", "editForm", "defaultTextBox_New", "defaultTextBox_Edit", "ngOnInit", "getClientLocations", "subscribe", "response", "calculateNoOfPages", "group", "clientLocationID", "control", "Validators", "required", "filterPipe", "FilterPipe", "noOfPages", "Math", "ceil", "transform", "i", "push", "ind", "onNewClick", "event", "reset", "setTimeout", "nativeElement", "focus", "onSaveClick", "valid", "insertClientLocation", "value", "next", "p", "newClientLocationFormCancel", "click", "error", "err", "console", "log", "clientLocation", "patchValue", "editIndex", "indexOf", "onUpdateClick", "updateClientLocation", "editClientLocationFormCancel", "deleteIndex", "onDeleteConfirmClick", "splice", "onSearchTextChange", "\u0275\u0275directiveInject", "ClientLocationService", "FormBuilder", "selectors", "viewQuery", "ClientLocationsComponent_Query", "rf", "ctx", "ClientLocationsComponent_i_2_Template", "ClientLocationsComponent_Template_button_click_7_listener", "ClientLocationsComponent_Template_select_ngModelChange_12_listener", "ClientLocationsComponent_Template_input_ngModelChange_19_listener", "ClientLocationsComponent_Template_input_keyup_19_listener", "ClientLocationsComponent_i_27_Template", "ClientLocationsComponent_i_28_Template", "ClientLocationsComponent_i_29_Template", "ClientLocationsComponent_tr_32_Template", "ClientLocationsComponent_Template_li_click_38_listener", "ClientLocationsComponent_ng_container_41_Template", "ClientLocationsComponent_ng_container_42_Template", "ClientLocationsComponent_Template_li_click_43_listener", "ClientLocationsComponent_span_63_Template", "ClientLocationsComponent_Template_button_click_68_listener", "ClientLocationsComponent_span_87_Template", "ClientLocationsComponent_Template_button_click_92_listener", "ClientLocationsComponent_Template_input_ngModelChange_111_listener", "ClientLocationsComponent_Template_button_click_115_listener", "\u0275\u0275pipeBind3", "\u0275\u0275pureFunction2", "_c5", "get", "invalid", "dirty", "touched", "submitted", "errors", "TaskPriority", "constructor", "taskPriorityID", "taskPriorityName", "i0", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "TaskPrioritiesComponent_i_27_Template_i_click_0_listener", "\u0275\u0275restoreView", "_r14", "ctx_r13", "\u0275\u0275nextContext", "sortBy", "\u0275\u0275resetView", "sortOrder", "\u0275\u0275elementEnd", "TaskPrioritiesComponent_i_28_Template_i_click_0_listener", "_r16", "ctx_r15", "TaskPrioritiesComponent_i_29_Template_i_click_0_listener", "_r18", "ctx_r17", "\u0275\u0275text", "TaskPrioritiesComponent_tr_32_Template_button_click_4_listener", "$event", "restoredCtx", "_r22", "taskPriority_r19", "$implicit", "ctx_r21", "onEditClick", "TaskPrioritiesComponent_tr_32_Template_button_click_7_listener", "ctx_r23", "onDeleteClick", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "taskPriorityName", "TaskPrioritiesComponent_ng_container_41_li_1_Template_li_click_0_listener", "_r27", "page_r25", "ctx_r26", "onPageIndexClicked", "pageIndex", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c4", "ctx_r24", "currentPageIndex", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "TaskPrioritiesComponent_ng_container_41_li_1_Template", "\u0275\u0275elementContainerEnd", "ctx_r5", "pages", "TaskPrioritiesComponent_ng_container_42_li_8_Template_li_click_0_listener", "_r31", "ctx_r30", "ctx_r29", "TaskPrioritiesComponent_ng_container_42_Template_li_click_1_listener", "_r33", "ctx_r32", "TaskPrioritiesComponent_ng_container_42_Template_li_click_4_listener", "ctx_r34", "TaskPrioritiesComponent_ng_container_42_li_7_Template", "TaskPrioritiesComponent_ng_container_42_li_8_Template", "TaskPrioritiesComponent_ng_container_42_Template_li_click_11_listener", "ctx_r35", "length", "TaskPrioritiesComponent_ng_container_42_Template_li_click_14_listener", "ctx_r36", "ctx_r6", "TaskPrioritiesComponent", "constructor", "taskPrioritiesService", "formBuilder", "taskPriorities", "showLoading", "deleteTaskPriority", "TaskPriority", "editIndex", "deleteIndex", "searchBy", "searchText", "pageSize", "newForm", "editForm", "defaultTextBox_New", "defaultTextBox_Edit", "ngOnInit", "getTaskPriorities", "subscribe", "response", "calculateNoOfPages", "group", "taskPriorityID", "control", "Validators", "required", "filterPipe", "FilterPipe", "noOfPages", "Math", "ceil", "transform", "i", "push", "ind", "onNewClick", "event", "reset", "setTimeout", "nativeElement", "focus", "onSaveClick", "valid", "insertTaskPriority", "value", "next", "p", "newTaskPriorityFormCancel", "click", "error", "err", "console", "log", "taskPriority", "patchValue", "indexOf", "onUpdateClick", "updateTaskPriority", "editTaskPriorityFormCancel", "onDeleteConfirmClick", "splice", "onSearchTextChange", "\u0275\u0275directiveInject", "TaskPrioritiesService", "FormBuilder", "selectors", "viewQuery", "TaskPrioritiesComponent_Query", "rf", "ctx", "TaskPrioritiesComponent_i_2_Template", "TaskPrioritiesComponent_Template_button_click_7_listener", "TaskPrioritiesComponent_Template_select_ngModelChange_12_listener", "TaskPrioritiesComponent_Template_input_ngModelChange_19_listener", "TaskPrioritiesComponent_Template_input_keyup_19_listener", "TaskPrioritiesComponent_i_27_Template", "TaskPrioritiesComponent_i_28_Template", "TaskPrioritiesComponent_i_29_Template", "TaskPrioritiesComponent_tr_32_Template", "TaskPrioritiesComponent_Template_li_click_38_listener", "TaskPrioritiesComponent_ng_container_41_Template", "TaskPrioritiesComponent_ng_container_42_Template", "TaskPrioritiesComponent_Template_li_click_43_listener", "TaskPrioritiesComponent_span_63_Template", "TaskPrioritiesComponent_Template_button_click_68_listener", "TaskPrioritiesComponent_span_87_Template", "TaskPrioritiesComponent_Template_button_click_92_listener", "TaskPrioritiesComponent_Template_input_ngModelChange_111_listener", "TaskPrioritiesComponent_Template_button_click_115_listener", "\u0275\u0275pipeBind3", "\u0275\u0275pureFunction2", "_c5", "get", "invalid", "dirty", "touched", "submitted", "errors", "i0", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "TaskStatusComponent_i_27_Template_i_click_0_listener", "\u0275\u0275restoreView", "_r14", "ctx_r13", "\u0275\u0275nextContext", "sortBy", "\u0275\u0275resetView", "sortOrder", "\u0275\u0275elementEnd", "TaskStatusComponent_i_28_Template_i_click_0_listener", "_r16", "ctx_r15", "TaskStatusComponent_i_29_Template_i_click_0_listener", "_r18", "ctx_r17", "\u0275\u0275text", "TaskStatusComponent_tr_32_Template_button_click_4_listener", "$event", "restoredCtx", "_r22", "taskStatus_r19", "$implicit", "ctx_r21", "onEditClick", "TaskStatusComponent_tr_32_Template_button_click_7_listener", "ctx_r23", "onDeleteClick", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "taskStatusName", "TaskStatusComponent_ng_container_41_li_1_Template_li_click_0_listener", "_r27", "page_r25", "ctx_r26", "onPageIndexClicked", "pageIndex", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c4", "ctx_r24", "currentPageIndex", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "TaskStatusComponent_ng_container_41_li_1_Template", "\u0275\u0275elementContainerEnd", "ctx_r5", "pages", "TaskStatusComponent_ng_container_42_li_8_Template_li_click_0_listener", "_r31", "ctx_r30", "ctx_r29", "TaskStatusComponent_ng_container_42_Template_li_click_1_listener", "_r33", "ctx_r32", "TaskStatusComponent_ng_container_42_Template_li_click_4_listener", "ctx_r34", "TaskStatusComponent_ng_container_42_li_7_Template", "TaskStatusComponent_ng_container_42_li_8_Template", "TaskStatusComponent_ng_container_42_Template_li_click_11_listener", "ctx_r35", "length", "TaskStatusComponent_ng_container_42_Template_li_click_14_listener", "ctx_r36", "ctx_r6", "TaskStatusComponent", "constructor", "taskStatusesService", "formBuilder", "taskStatuses", "showLoading", "deleteTaskStatus", "TaskStatus", "editIndex", "deleteIndex", "searchBy", "searchText", "pageSize", "newFormSubmitted", "editFormSubmitted", "ngOnInit", "getTaskStatuses", "subscribe", "response", "calculateNoOfPages", "newForm", "group", "taskStatusID", "control", "Validators", "required", "editForm", "filterPipe", "FilterPipe", "noOfPages", "Math", "ceil", "transform", "i", "push", "ind", "onNewClick", "event", "reset", "setTimeout", "defaultTextBox_New", "nativeElement", "focus", "onSaveClick", "valid", "insertTaskStatus", "value", "p", "newTaskStatusFormCancel", "click", "error", "console", "log", "taskStatus", "patchValue", "indexOf", "defaultTextBox_Edit", "onUpdateClick", "updateTaskStatus", "editTaskStatusFormCancel", "onDeleteConfirmClick", "next", "splice", "err", "onSearchTextChange", "\u0275\u0275directiveInject", "TaskStatusesService", "FormBuilder", "selectors", "viewQuery", "TaskStatusComponent_Query", "rf", "ctx", "TaskStatusComponent_i_2_Template", "TaskStatusComponent_Template_button_click_7_listener", "TaskStatusComponent_Template_select_ngModelChange_12_listener", "TaskStatusComponent_Template_input_ngModelChange_19_listener", "TaskStatusComponent_Template_input_keyup_19_listener", "TaskStatusComponent_i_27_Template", "TaskStatusComponent_i_28_Template", "TaskStatusComponent_i_29_Template", "TaskStatusComponent_tr_32_Template", "TaskStatusComponent_Template_li_click_38_listener", "TaskStatusComponent_ng_container_41_Template", "TaskStatusComponent_ng_container_42_Template", "TaskStatusComponent_Template_li_click_43_listener", "TaskStatusComponent_span_63_Template", "TaskStatusComponent_Template_button_click_68_listener", "TaskStatusComponent_span_87_Template", "TaskStatusComponent_Template_button_click_92_listener", "TaskStatusComponent_Template_input_ngModelChange_111_listener", "TaskStatusComponent_Template_button_click_115_listener", "\u0275\u0275pipeBind3", "\u0275\u0275pureFunction2", "_c5", "tmp_10_0", "get", "invalid", "dirty", "touched", "tmp_11_0", "errors", "tmp_13_0", "tmp_14_0", "i0", "\u0275\u0275elementStart", "\u0275\u0275listener", "MastersComponent_a_5_Template_a_click_0_listener", "restoredCtx", "\u0275\u0275restoreView", "_r5", "masterMenuItem_r3", "$implicit", "ctx_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "menuItemClick", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "ctx_r0", "activeItem", "itemName", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "displayName", "MastersComponent_li_8_Template_a_click_1_listener", "_r8", "tab_r6", "ctx_r7", "MastersComponent_li_8_Template_span_click_3_listener", "ctx_r9", "onCloseClick", "\u0275\u0275sanitizeUrl", "ctx_r1", "\u0275\u0275textInterpolate1", "\u0275\u0275template", "MastersComponent_div_10_ng_template_2_Template", "tab_r10", "ctx_r2", "MastersComponent", "constructor", "masterMenuItems", "component", "CountriesComponent", "ClientLocationsComponent", "TaskPrioritiesComponent", "TaskStatusComponent", "tabs", "componentLoaders", "ngOnInit", "clickedMasterMenuItem", "matchingTabs", "filter", "tab", "length", "push", "setTimeout", "componentLoadersArray", "toArray", "viewContainerRef", "clear", "componentRef", "createComponent", "name", "componentInstance", "instance", "clickedTab", "remove", "splice", "indexOf", "selectors", "viewQuery", "MastersComponent_Query", "rf", "ctx", "ComponentLoaderDirective", "MastersComponent_a_5_Template", "MastersComponent_li_8_Template", "MastersComponent_div_10_Template", "routes", "path", "canActivate", "CanActivateGuardService", "data", "expectedRole", "children", "component", "DashboardComponent", "ProjectsComponent", "ProjectDetailsComponent", "MastersComponent", "AdminRoutingModule", "RouterModule", "forChild", "AdminModule", "DashboardService", "imports", "SharedModule", "AdminRoutingModule"]
}
